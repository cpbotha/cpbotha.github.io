<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>fsharp on voices in my head</title><link>https://cpbotha.net/tags/fsharp/</link><description>Recent content in fsharp on voices in my head</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>cpbotha@cpbotha.net (Charl P. Botha)</managingEditor><webMaster>cpbotha@cpbotha.net (Charl P. Botha)</webMaster><lastBuildDate>Mon, 15 Apr 2019 22:12:00 +0200</lastBuildDate><atom:link href="https://cpbotha.net/tags/fsharp/index.xml" rel="self" type="application/rss+xml"/><item><title>Weekly Head Voices #169: A cunning plan.</title><link>https://cpbotha.net/2019/04/15/weekly-head-voices-169-a-cunning-plan/</link><pubDate>Mon, 15 Apr 2019 22:12:00 +0200</pubDate><author>cpbotha@cpbotha.net (Charl P. Botha)</author><guid>https://cpbotha.net/2019/04/15/weekly-head-voices-169-a-cunning-plan/</guid><description> Beautiful evening skies above my house. I just went through my notes.
As far as I can see now, the week from Monday April 8 to Sunday April 14 2019, although otherwise quite solid in terms of productivity and of The Important Stuff(tm), did not fare too well on the blog-worthiness scale.
About the exact implications of this discrepancy, I am also not entirely sure.
Nonetheless, my mission at this moment is to try and give you something entertaining and/or educational, and for this I have a cunning plan&amp;hellip;</description><content:encoded><![CDATA[ <figure>
<a href="pretty_clouds_above_home.jpg">
















  <img

    sizes="(min-width: 35em) 1200px, 100vw"
  
  srcset='
  
    https://cpbotha.net/2019/04/15/weekly-head-voices-169-a-cunning-plan/pretty_clouds_above_home_hu4312bfdcd43b2079e55aafe4c2ba7609_2403668_480x0_resize_q75_box.jpg 480w
  
  
    , https://cpbotha.net/2019/04/15/weekly-head-voices-169-a-cunning-plan/pretty_clouds_above_home_hu4312bfdcd43b2079e55aafe4c2ba7609_2403668_800x0_resize_q75_box.jpg 800w
  
  
    , https://cpbotha.net/2019/04/15/weekly-head-voices-169-a-cunning-plan/pretty_clouds_above_home_hu4312bfdcd43b2079e55aafe4c2ba7609_2403668_1200x0_resize_q75_box.jpg 1200w
  
  
    , https://cpbotha.net/2019/04/15/weekly-head-voices-169-a-cunning-plan/pretty_clouds_above_home_hu4312bfdcd43b2079e55aafe4c2ba7609_2403668_1500x0_resize_q75_box.jpg 1500w 
  '



  
  src="https://cpbotha.net/2019/04/15/weekly-head-voices-169-a-cunning-plan/pretty_clouds_above_home_hu4312bfdcd43b2079e55aafe4c2ba7609_2403668_800x0_resize_q75_box.jpg"
  

  alt='pretty evening clouds above my home' />



</a>
<figcaption>
Beautiful evening skies above my house.
</figcaption>
</figure>
<p>I just went through my notes.</p>
<p>As far as I can see now, the week from Monday April 8 to Sunday April 14 2019,
although otherwise quite solid in terms of productivity and of The Important
Stuff(tm), did not fare too well on the blog-worthiness scale.</p>
<p>About the exact implications of this discrepancy, <a href="https://en.wikipedia.org/wiki/If_a_tree_falls_in_a_forest">I am also not entirely
sure</a>.</p>
<p>Nonetheless, my mission at this moment is to try and give you something
entertaining and/or educational, and for this <a href="http://blackadderquotes.com/i-have-a-cunning-plan">I have a cunning
plan&hellip;</a></p>
<h2 id="nimfatuation-is-now-over">nimfatuation is now OVER.</h2>
<div class="highlight"><pre tabindex="0" style="color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-common-lisp" data-lang="common-lisp"><span style="display:flex;"><span><span style="color:#93a1a1;font-style:italic">;; consider reading this section if this line of code is clear to you</span>
</span></span><span style="display:flex;"><span>(<span style="color:#859900">if</span> (<span style="color:#268bd2">not</span> (<span style="color:#268bd2">are-nerd</span> <span style="color:#268bd2">you</span>)) (<span style="color:#268bd2">skip-this-section</span>))
</span></span></code></pre></div><p>Last week, <a href="/2019/04/08/weekly-head-voices-168-postcards-from-the-edge/#nim-surprise">I had happily started diving into the nim language and its
ecosystem</a>.</p>
<p>I was quite happy to hear that in addition to the enjoyment it had given me,
the spark had jumped over to at least one other peep (O HAI THERE S!) via
these writings.</p>
<p>However, after getting deeper into <a href="https://github.com/dom96/jester/issues/194">jester&rsquo;s multi-threading
intricacies</a> and discovering that
I could not get run-time confirmation that my requests were being handled by
separate threads, I returned to my initial target language for this experiment of
rewriting, namely f#!</p>
<p>nim is really a great little experiment: It consists of higher level
abstractions that compile down to C, and it&rsquo;s quite amazing to see what this
enables one to do.</p>
<p>However, I require something richer and more functional for my language
learning slot.</p>
<p>As I have written previously, <a href="/2018/07/17/weekly-head-voices-148-data-stylist/#f">f# hits all six of my 2018
PL-requirements</a>.</p>
<p>In addition to the qualities of the language itself, <a href="https://devblogs.microsoft.com/dotnet/announcing-net-core-3-preview-3/">dotnet core 3, currently
at preview
3</a>, is
showing great progress, also in terms of memory efficiency and raw
performance.</p>
<p>I spent some time during the past week to re-re-implement my
nim-re-implementation of parts of isso, again purely for learning purposes.</p>
<p>(As an aside, it&rsquo;s interesting how close such a real-world example enables one
to get to using a tool or language <em>in anger</em>.)</p>
<p>Here&rsquo;s a fragment from my learning experiment, because if you&rsquo;re like me
you&rsquo;ll want to see what f# looks like:</p>
<div class="highlight"><pre tabindex="0" style="color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fsharp" data-lang="fsharp"><span style="display:flex;"><span><span style="color:#859900">let</span> <span style="color:#268bd2">getCommentsHandler</span> : <span style="color:#268bd2">HttpHandler</span> =
</span></span><span style="display:flex;"><span>    <span style="color:#859900">fun</span> (<span style="color:#268bd2">next</span> : <span style="color:#268bd2">HttpFunc</span>) (<span style="color:#268bd2">ctx</span> : <span style="color:#268bd2">HttpContext</span>) -&gt;
</span></span><span style="display:flex;"><span>        <span style="color:#268bd2">task</span> {
</span></span><span style="display:flex;"><span>            <span style="color:#93a1a1;font-style:italic">// going from normal str -&gt; Result to str -&gt; Task&lt;Result&gt;,
</span></span></span><span style="display:flex;"><span><span style="color:#93a1a1;font-style:italic"></span>            <span style="color:#93a1a1;font-style:italic">// so unfortunately no railway OP here.
</span></span></span><span style="display:flex;"><span><span style="color:#93a1a1;font-style:italic"></span>            <span style="color:#859900">match</span> <span style="color:#268bd2">ctx</span>.<span style="color:#268bd2">GetQueryStringValue</span> <span style="color:#2aa198">&#34;uri&#34;</span> <span style="color:#859900">with</span>
</span></span><span style="display:flex;"><span>            | <span style="color:#268bd2">Error</span> _ -&gt; <span style="color:#859900">return</span>! <span style="color:#268bd2">setStatusCode</span> <span style="color:#268bd2">404</span> <span style="color:#268bd2">next</span> <span style="color:#268bd2">ctx</span>
</span></span><span style="display:flex;"><span>            | <span style="color:#268bd2">Ok</span> <span style="color:#268bd2">uri</span> -&gt;
</span></span><span style="display:flex;"><span>                <span style="color:#859900">match</span>! <span style="color:#268bd2">getThreadForUriAsync</span> <span style="color:#268bd2">uri</span> <span style="color:#859900">with</span>
</span></span><span style="display:flex;"><span>                | <span style="color:#268bd2">Ok</span> <span style="color:#268bd2">thread</span> -&gt;
</span></span><span style="display:flex;"><span>                    <span style="color:#859900">match</span>! <span style="color:#268bd2">getCommentsForThreadId</span> <span style="color:#268bd2">thread</span>.<span style="color:#268bd2">id</span> <span style="color:#859900">with</span>
</span></span><span style="display:flex;"><span>                    | <span style="color:#268bd2">Ok</span> <span style="color:#268bd2">comments</span> -&gt; <span style="color:#859900">return</span>! <span style="color:#268bd2">json</span> <span style="color:#268bd2">comments</span> <span style="color:#268bd2">next</span> <span style="color:#268bd2">ctx</span>
</span></span><span style="display:flex;"><span>                    | <span style="color:#268bd2">Error</span> <span style="color:#268bd2">msg</span> -&gt; <span style="color:#859900">return</span>! (<span style="color:#268bd2">setStatusCode</span> <span style="color:#268bd2">404</span> &gt;=&gt; <span style="color:#268bd2">text</span> <span style="color:#268bd2">msg</span>) <span style="color:#268bd2">next</span> <span style="color:#268bd2">ctx</span>
</span></span><span style="display:flex;"><span>                | <span style="color:#268bd2">Error</span> <span style="color:#268bd2">msg</span> -&gt; <span style="color:#859900">return</span>! (<span style="color:#268bd2">setStatusCode</span> <span style="color:#268bd2">404</span> &gt;=&gt; <span style="color:#268bd2">text</span> <span style="color:#268bd2">msg</span>) <span style="color:#268bd2">next</span> <span style="color:#268bd2">ctx</span>
</span></span><span style="display:flex;"><span>        }
</span></span></code></pre></div><p>This is a <a href="https://github.com/giraffe-fsharp/Giraffe">Giraffe</a> handler that
handles a request with a <code>uri</code> query parameter. First it looks up the comment
thread in the isso database. If it finds a thread, it looks up the comments
and returns the whole list as JSON.</p>
<p>As you can see, there is error handling at every level.</p>
<p>F# code is expressive, but it is also fully typed. In this case it is
executed asynchronously (that&rsquo;s what the <code>task {}</code> and the <code>!</code>s are for), with
the asynchronous tasks distributed over threads.</p>
<p>In other words, we have a compiled functional language with Python-level
expressivity with really strong (and easy!) concurrency support.</p>
<p>If there had been no need for asynchrony, the code above could have been
rewritten following the <a href="https://swlaschin.gitbooks.io/fsharpforfunandprofit/content/posts/recipe-part2.html">railway-oriented
programming</a>
idea (from memory, not tested, as one does!):</p>
<div class="highlight"><pre tabindex="0" style="color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-fsharp" data-lang="fsharp"><span style="display:flex;"><span><span style="color:#93a1a1;font-style:italic">// create chain of input -&gt; Result calls using the railway operator
</span></span></span><span style="display:flex;"><span><span style="color:#93a1a1;font-style:italic">// an Error anywhere will exit from the chain and can be handled by caller
</span></span></span><span style="display:flex;"><span><span style="color:#93a1a1;font-style:italic"></span><span style="color:#859900">let</span> <span style="color:#268bd2">getCommentsForRequest</span> (<span style="color:#268bd2">ctx</span>: <span style="color:#268bd2">HttpContext</span>) =
</span></span><span style="display:flex;"><span>    <span style="color:#268bd2">ctx</span>.<span style="color:#268bd2">GetQueryStringValue</span> <span style="color:#2aa198">&#34;uri&#34;</span>
</span></span><span style="display:flex;"><span>    &gt;&gt;= <span style="color:#268bd2">getThreadIdForUri</span>
</span></span><span style="display:flex;"><span>    &gt;&gt;= <span style="color:#268bd2">getCommentsForThreadId</span>    
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#859900">fun</span> (<span style="color:#268bd2">next</span> : <span style="color:#268bd2">HttpFunc</span>) (<span style="color:#268bd2">ctx</span> : <span style="color:#268bd2">HttpContext</span>) -&gt;
</span></span><span style="display:flex;"><span>    <span style="color:#859900">match</span> <span style="color:#268bd2">getCommentsForRequest</span> <span style="color:#268bd2">ctx</span> <span style="color:#859900">with</span>
</span></span><span style="display:flex;"><span>    | <span style="color:#268bd2">Ok</span> <span style="color:#268bd2">comments</span> -&gt; <span style="color:#859900">return</span>! <span style="color:#268bd2">json</span> <span style="color:#268bd2">comments</span> <span style="color:#268bd2">next</span> <span style="color:#268bd2">ctx</span>
</span></span><span style="display:flex;"><span>    | <span style="color:#268bd2">Error</span> <span style="color:#268bd2">msg</span> -&gt; <span style="color:#859900">return</span>! (<span style="color:#268bd2">setStatusCode</span> <span style="color:#268bd2">404</span> &gt;=&gt; <span style="color:#268bd2">text</span> <span style="color:#268bd2">msg</span>) <span style="color:#268bd2">next</span> <span style="color:#268bd2">ctx</span>
</span></span></code></pre></div><p>During this exercise, I found F# Interactive (the built-in repl) super useful
to select and execute blocks of code from my source, Lisp-style, in order to
get my database support up and running.</p>
<p>In terms of the learning journey, I have not even left my own village
yet. However, F# seems to be triggering all of the right receptors.</p>
<h2 id="someone-is-right-on-the-internet">Someone is right on the internet.</h2>
<p><em>My</em> week might not have been the most blog-worthy, but, my goodness, the
Wonderful World of Science has not been sitting still!</p>
<p>You see, in desperation I went rummaging through the recent additions to
<a href="/2019/03/21/weekly-head-voices-165-get-in-my-pocket/#replacing-pocket-with-just-a-bunch-of-pdfs-jbop">JBOP</a>,
aka my growing collection of Really Interesting PDFs, and I hand-picked a few
tidbits worthy of casually mentioning during the undoubtedly erudite
discussion at your next cocktail party!</p>
<h3 id="each-millilitre-of-vosub2sub-max-reduces-your-risk-of-dying-by-28">Each millilitre of VO<sub>2</sub> max reduces your risk of dying by 2.8%.</h3>
<p>If we&rsquo;ve run (I see what I did there) into each other more than once, <a href="/2018/10/23/weekly-head-voices-156-karma-chameleon/#grab-bag-of-thought-and-or-debate-provoking-pieces">I&rsquo;ve
probably
mentioned</a>
last year&rsquo;s publication of the Cleveland treadmill study where they put 122000
people on a treadmill (the study took 20 years) to show that being unfit on a
treadmill is at least as risky (in terms of you dying) as being a smoker.</p>
<p>Well, last week the result of an even larger Swedish study, with 316137
participants, <a href="https://www.eurekalert.org/pub_releases/2019-04/esoc-mmt040819.php">were reported at EuroPrevent
2019</a>.</p>
<p>With each additional millilitre of oxygen per kilogram of body mass per minute
(<a href="https://en.wikipedia.org/wiki/VO2_max">VO<sub>2</sub> max, a cardiorespiratory fitness
measure</a>), the risk of all-cause
mortality fell by 2.8%, and the risk of cardiovascular events fell by 3.2%.</p>
<p>According to at least <a href="https://www.topendsports.com/testing/norms/vo2max.htm">one
source</a>, the range
between poor and excellent VO<sub>2</sub> max in most age segments for men and
women is 20 millilitres or more.</p>
<p>At 2.8% per millilitre, that certainly makes one think!</p>
<h3 id="hpv-vaccine-linked-to-dramatic-drop-in-cervical-disease">HPV vaccine linked to dramatic drop in cervical disease.</h3>
<p>Almost exactly 10 years ago, I wrote <a href="/2009/05/21/you-must-vaccinate/">a post on this blog titled &ldquo;You must
vaccinate&rdquo;</a> because friends and acquaintances
were asking questions which I found surprising on the one hand and quite
alarming on the other.</p>
<p>At that point I thought that even the slowest among us would have caught up to
the fact that there are an extremely large number of good reasons to
vaccinate, and almost none not to.</p>
<p>It seems that I over-estimated the capabilities and size of the slow group&hellip;</p>
<p>It is now 10 years later, and the anti-vaxxers have managed to <a href="https://www.who.int/news-room/detail/29-11-2018-measles-cases-spike-globally-due-to-gaps-in-vaccination-coverage">bring measles
(and some friends) back from
extinction</a>.</p>
<p>Fortunately, there is also much to celebrate on the vaccination front.</p>
<p>Scotland started with their <a href="https://www.womenshealth.gov/a-z-topics/human-papillomavirus">human
papillomavirus</a>
vaccination programme 10 years ago, administering the vaccine to girls when
they are at around 12 years of age.</p>
<p>Researchers now say that since then the HPV vaccine has <a href="https://www.bbc.com/news/uk-scotland-47803975">&ldquo;nearly wiped out
cases of cervical pre-cancer in young
women&rdquo;</a>.</p>
<p>What&rsquo;s also heartening is that unvaccinated women also showed a reduction in
disease, implying that the immunisation programme is protecting even more
humans from the disease due to the herd effect.</p>
<p>(GOU#1 had her HPV shot at school last year. There were parents who
complained. I don&rsquo;t know if there were any refusers.)</p>
<p>I am still hopeful that one day all of these victories will contribute to the
attrition of the irresponsibly dangerous anti-vaxx movement.</p>
<h3 id="how-the-matrix-built-a-bullet-proof-legacy">How The Matrix Built A Bullet-Proof Legacy.</h3>
<p>Surprise! This one is not from science, but it was such an amazing read that I
have to share.</p>
<p>If, like me, you saw The Matrix more times than you can count, you will also
enjoy this write-up of how the whole project came together:</p>
<p>Extract from the book <em>How 1999 blew up the Big Screen</em> by Brian Raftery: <a href="https://www.wired.com/story/the-matrix-legacy-book-excerpt/">HOW
THE MATRIX BUILT A BULLET-PROOF
LEGACY</a></p>
<h2 id="you-never-write">You never write.</h2>
<p>At Tuesday&rsquo;s edition of the Helderberg Software Developers and Entrepreneurs
meetup, organised by <a href="https://wogan.blog/">Wogan May</a> (pssst, he has a
personal blog with mostly weekly updates!) and myself, <a href="http://johan.beyers.co.za/">Johan
Beyers</a> talked about the personal resolution of
doing a given amount of (personal) writing every day.</p>
<p>I try to do it once weekly with the WHV, and I mostly manage to make a few
bullet points detailing my exploits every day, but the idea of additionally
writing a few more prose-like paragraphs of thoughts every day really
resonates with me.</p>
<p>Derek Sivers (he was a famous startup-person even before the whole startup
boom, thanks <a href="https://twitter.com/gerwindehaan">Gerwin de Haan</a> for that book
so many years ago!) <a href="https://sivers.org/dj">makes a good case for writing a few diary-like sentences
every evening</a>.</p>
<p>What&rsquo;s even more intriguing, is his suggestion to maintain separate &ldquo;Thoughts
On&rdquo; journals for various topics that you think about often. In my case, these
could be for example &ldquo;Thoughts on Programming Languages&rdquo;, or &ldquo;Thoughts on
mindfulness for children&rdquo;, or &ldquo;Thoughts on the WHV rules for a contented
life&rdquo;, and so on.</p>
<p>I think it would be a cunning plan to give both of these additional writing
practices a good go.</p>
<p>Let me know in the comments what you think!</p>
<figure>
<a href="strand_running_clouds_on_mountains.jpg">
















  <img

    sizes="(min-width: 35em) 1200px, 100vw"
  
  srcset='
  
    https://cpbotha.net/2019/04/15/weekly-head-voices-169-a-cunning-plan/strand_running_clouds_on_mountains_hu38426c04232e1444bb0c0608208a1e21_2519865_480x0_resize_q75_box.jpg 480w
  
  
    , https://cpbotha.net/2019/04/15/weekly-head-voices-169-a-cunning-plan/strand_running_clouds_on_mountains_hu38426c04232e1444bb0c0608208a1e21_2519865_800x0_resize_q75_box.jpg 800w
  
  
    , https://cpbotha.net/2019/04/15/weekly-head-voices-169-a-cunning-plan/strand_running_clouds_on_mountains_hu38426c04232e1444bb0c0608208a1e21_2519865_1200x0_resize_q75_box.jpg 1200w
  
  
    , https://cpbotha.net/2019/04/15/weekly-head-voices-169-a-cunning-plan/strand_running_clouds_on_mountains_hu38426c04232e1444bb0c0608208a1e21_2519865_1500x0_resize_q75_box.jpg 1500w 
  '



  
  src="https://cpbotha.net/2019/04/15/weekly-head-voices-169-a-cunning-plan/strand_running_clouds_on_mountains_hu38426c04232e1444bb0c0608208a1e21_2519865_800x0_resize_q75_box.jpg"
  

  alt='photo taken at postcard cafe' />



</a>
<figcaption> 
You've seen photos like these before, but on this very day, I really liked how the clouds
were creating patterns of light and dark created on the mountains in the distance.
</figcaption>
</figure>
]]></content:encoded></item><item><title>Weekly Head Voices #168: Postcards from the edge.</title><link>https://cpbotha.net/2019/04/08/weekly-head-voices-168-postcards-from-the-edge/</link><pubDate>Mon, 08 Apr 2019 22:43:00 +0200</pubDate><author>cpbotha@cpbotha.net (Charl P. Botha)</author><guid>https://cpbotha.net/2019/04/08/weekly-head-voices-168-postcards-from-the-edge/</guid><description><![CDATA[ Sometimes it feels like the place is falling apart, and sometimes you find yourself in a heavenly corner like this. Postcard Café, Jonkershoek, Stellenbosch. My friend showed me a photo and said &ldquo;Here&rsquo;s a picture of me when I was younger&rdquo;. Every picture is of you when you were younger. &ndash; Mitch Hedberg (RIP)
In this edition of the WHV, I cast my now older eyes back on the week starting on Monday, April 1 and ending on Sunday, April 7, 2019.]]></description><content:encoded><![CDATA[ <figure>
<a href="postcard_cafe_view.jpg">
















  <img

    sizes="(min-width: 35em) 1200px, 100vw"
  
  srcset='
  
    https://cpbotha.net/2019/04/08/weekly-head-voices-168-postcards-from-the-edge/postcard_cafe_view_hu03250394b5533205db249a2d1d0cc394_2490609_480x0_resize_q75_box.jpg 480w
  
  
    , https://cpbotha.net/2019/04/08/weekly-head-voices-168-postcards-from-the-edge/postcard_cafe_view_hu03250394b5533205db249a2d1d0cc394_2490609_800x0_resize_q75_box.jpg 800w
  
  
    , https://cpbotha.net/2019/04/08/weekly-head-voices-168-postcards-from-the-edge/postcard_cafe_view_hu03250394b5533205db249a2d1d0cc394_2490609_1200x0_resize_q75_box.jpg 1200w
  
  
    , https://cpbotha.net/2019/04/08/weekly-head-voices-168-postcards-from-the-edge/postcard_cafe_view_hu03250394b5533205db249a2d1d0cc394_2490609_1500x0_resize_q75_box.jpg 1500w 
  '



  
  src="https://cpbotha.net/2019/04/08/weekly-head-voices-168-postcards-from-the-edge/postcard_cafe_view_hu03250394b5533205db249a2d1d0cc394_2490609_800x0_resize_q75_box.jpg"
  

  alt='photo taken at postcard cafe' />



</a>
<figcaption> 
Sometimes it feels like the place is falling apart, and sometimes
you find yourself in a heavenly corner like this. Postcard Café, Jonkershoek,
Stellenbosch.
</figcaption>
</figure>
<blockquote>
<p>My friend showed me a photo and said &ldquo;Here&rsquo;s a picture of me when I was
younger&rdquo;. Every picture is of you when you were younger.
&ndash; Mitch Hedberg (RIP)</p>
</blockquote>
<p>In this edition of the WHV, I cast my now older eyes back on the week starting
on Monday, April 1 and ending on Sunday, April 7, 2019.</p>
<p>I have to apologise for the extremely high nerd content. There will be wine at
the end to make up for it!</p>
<h2 id="working-late-like-its-1998">Working late like it&rsquo;s 1998.</h2>
<p>At the start of the week, I had resolved to get more sleep.</p>
<p>It seems that when I have a good night&rsquo;s sleep, really working that
<a href="https://en.wikipedia.org/wiki/Glymphatic_system">glymphatic system</a> (I&rsquo;m
currently fascinated by the glymphatic system, I hope you like it too),
amongst other nightly repair activities, there is a greater probability that I
am able to hold my focus the next day.</p>
<p>This was going swimmingly.</p>
<p>At least that was the case until Wednesday, when I decided that the time had
come to port <a href="https://vxlabs.com/">vxlabs</a>, the far more nerdy sister of this
blog, from <a href="https://cpbotha.net/2019/03/31/wordpress-to-hugo/">wordpress to hugo as
well</a>.</p>
<p>One thing led to another, and by 1:00AM (on a school night no less!) I was
busy wrapping up the isso commenting system configuration.</p>
<p>(We&rsquo;re able to use free and ad-free disqus over here because this is a
personal blog. vxlabs on the other hand is strictly speaking a commercial
site, even although it&rsquo;s filled with non-commercial blog posts.)</p>
<p>One of the many funny things about being a nerd, is that it&rsquo;s almost
impossible to go to bed before a technical thing like this has been
convincingly put to bed.</p>
<p>Fortunately this late night indiscretion yielded a working self-hosted
commenting system, and, far more importantly, a <a href="/2019/04/06/isso-on-webfaction/">rather attractively styled
post, thanks to the Hugo-port, detailing the whole
installation</a>.</p>
<p>In entirely predictable fashion, the next day was not the best focus-wise.</p>
<p>P.S. 1998 - first postgrad year in the DSP lab. All-nighters all the way down&hellip;</p>
<figure>
















  <img

    sizes="(min-width: 35em) 1200px, 100vw"
  
  srcset='
  
    https://cpbotha.net/2019/04/08/weekly-head-voices-168-postcards-from-the-edge/dsp_lab_photo4_hu9ee58e4bdba0ae214d7d56f78a627136_96292_480x0_resize_q75_box.jpg 480w
  
  
    , https://cpbotha.net/2019/04/08/weekly-head-voices-168-postcards-from-the-edge/dsp_lab_photo4_hu9ee58e4bdba0ae214d7d56f78a627136_96292_800x0_resize_q75_box.jpg 800w
  
  
  '



  
  src="https://cpbotha.net/2019/04/08/weekly-head-voices-168-postcards-from-the-edge/dsp_lab_photo4_hu9ee58e4bdba0ae214d7d56f78a627136_96292_800x0_resize_q75_box.jpg"
  

  alt='photo taken at postcard cafe' />



<figcaption>DSP lab, somewhen between 97 - 99.</figcaption>
</figure>
<h2 id="nim-surprise">nim-surprise.</h2>
<p>I chose Isso because it&rsquo;s Python.</p>
<p>DayJob(tm) is all about Python, so this was a great choice in terms of time
savings.</p>
<p>With all of the time I had saved, I decided that I would experiment with
re-implementing parts of Isso in <a href="https://fsharp.org/">f#</a>, my current hobby
functional language.</p>
<p>Setting aside the irony here, I learned after some time that getting f#, the
impressive looking <a href="https://fsprojects.github.io/SQLProvider/">SQLProvider</a> and
sqlite (isso&rsquo;s database) all working together on Linux was <a href="https://www.reddit.com/r/fsharp/comments/8ufvzz/how_can_i_add_sqlprovider_to_my_existing_project/e1idy1o/">&ldquo;probably the
single most complicated thing that you can do with a F# project, when it comes
to
tooling&rdquo;</a>.</p>
<p>In this case, I was thankfully able to switch gears and did a brief review of
possible candidates for a functional(ish), memory efficient, fast(ish)
compilation languages that could be used to implement an Isso web-service
replacement.</p>
<p>Somehow I ended up with <a href="https://nim-lang.org/">nim</a>.</p>
<p>This has been on my radar for a while now, but there were always shinier
things to try.</p>
<p>I think what might have put me off was the similarity to Python.</p>
<p>So, with the rest of the time I had saved choosing Isso, I got up to
speed(ish) with nim by starting to implement a replacement for parts of the
isso commenting system.</p>
<p>I was quite positively surprised by the following:</p>
<ul>
<li>Compilation speed: The nim compiler transforms my webservice code into C and
then compiles that in about 1.2 seconds.</li>
<li>Performance and memory size of resultant binary: This is not a fair
comparison to Python, but the multi-threaded nim service consumes a few
megabytes in total.</li>
<li>Availability of packages especially for building a web service like this:
Using the nimble package manager, I could install
<a href="https://github.com/dom96/jester">jester</a> and had my first running
web-service in a few minutes.</li>
<li>Built-in sqlite support.</li>
<li>Real macros: I used the list comprehension one in the <code>sugar</code> module.</li>
</ul>
<p>This was really just an exercise (for now), but I have a new tool for whenever
I need to write a fast and compact compiled web-service again!</p>
<p>P.S. Learning new programming languages is one of my favourite things.</p>
<p>P.P.S. Thanks to the internet and open source, and especially tools like
github, we are currently going through a sort of programming language Cambrian
explosion. See this <a href="http://fll.presidentbeef.com/">Fledgling Languages List</a>
for example. Pony!</p>
<h2 id="decompression">Decompression.</h2>
<p>On Sunday, we made the drive out to Jonkershoek in Stellenbosch.</p>
<p>Even although it&rsquo;s only 40 minutes away, I haven&rsquo;t been there in far too
long. It&rsquo;s a truly beautiful corner of the planet.</p>
<p>At the Postcard Café, after some internal deliberation, I made the decision
that the moment was special enough to interrupt LAZ
(lifestyle-alcohol-zero(tm)) with an all the more special glass of the
<a href="https://winemag.co.za/stark-conde-the-field-blend-2014/">Stark-Condé Field Blend white
wine</a>.</p>
<p>This is a hyper-local blend of Chenin Blanc, Rousanne, Verdelho and Viognier,
all four varietals which grow on the mountain-side right across from the
Café&rsquo;s veranda.</p>
<p>It really was divine.</p>
]]></content:encoded></item><item><title>Weekly Head Voices #148: Data stylist.</title><link>https://cpbotha.net/2018/07/17/weekly-head-voices-148-data-stylist/</link><pubDate>Tue, 17 Jul 2018 07:22:30 +0000</pubDate><author>cpbotha@cpbotha.net (Charl P. Botha)</author><guid>https://cpbotha.net/2018/07/17/weekly-head-voices-148-data-stylist/</guid><description> Ridiculously fun trail in Paarl somewhere. (Photo taken by Trail Friend #1. Trail Friend #2 cropped from picture, because no permission to appear on the internets!)
This post covers the week from Monday July 9 to Sunday July 15.
The business part of my week was unfairly dominated by far too much after-work obsessing over programming languages, with which I seem to have an unhealthy (or perhaps not) obsession.</description><content:encoded><![CDATA[ 







<figure><a href="/wp-content/uploads/2018/07/drakenstein_trail.jpg">
    <img
        
            
            src="/wp-content/uploads/2018/07/drakenstein_trail-1024x241.jpg"
        
            alt="Ridiculously fun trail in Paarl somewhere. (Photo taken by Trail Friend #1. Trail Friend #2 cropped from picture, because no permission to appear on the internets!)"/> </a><figcaption>
            <p>Ridiculously fun trail in Paarl somewhere. (Photo taken by Trail Friend #1. Trail Friend #2 cropped from picture, because no permission to appear on the internets!)</p>
        </figcaption>
</figure>

<p>This post covers the week from Monday July 9 to Sunday July 15.</p>
<p>The business part of my week was unfairly dominated by far too much after-work obsessing over programming languages, with which I seem to have an unhealthy (or perhaps not) obsession.</p>
<p>I will externalise some of these thoughts further down in this post.</p>
<p>I’m starting with a weekend / running update, which should be reasonably safe for non-nerds to read. However, after that, the nerd dial will go up to 11 with stuff about tools and programming languages right up to the end of the post.</p>
<p>I would have wanted to use the adjective “face-melting”, but I’m not sure if any intensity of nerdery could ever reach that level.</p>
<p>We can dream.</p>
<h1 id="weekend-running-update">Weekend running update</h1>
<p>Most fortunately the weekend had other plans and supplied us with at least 2.5 parties, the first of which even culminated in a <em>ridiculously</em> fun trail run in the mountains on the winter morning after.</p>
<p>The winter morning sun was just perfect, the company was great, and I had forgotten all forms of performance tracking devices at home.</p>
<p>Readers with bionic eyes might notice the Lunas on my feet.</p>
<p>I have now ran just over 260km in them, but, in a surprise twist to the regular readers of this blog, my biological equipment has still not yet completely adjusted to the new style of locomotion.</p>
<p>The latest victim seems to be one of Tom, Dick and Harry, the tendons running under the medial <a href="https://en.wikipedia.org/wiki/Malleolus">malleolus</a> of my left foot, also known as that big knob on your inside ankle. Tom (the primary suspect in this case according to Trail Friend #1 who is knowledgable with regard to these matters, being a running foot surgeon and all), Dick and Harry <a href="https://radiopaedia.org/articles/posterior-ankle-tendons-mnemonic">are also known as the *T*ibialis posterior, flexor *D*igitorum longus and the flexor *H*allucis longus</a>.</p>
<p>They currently have to work extra hard to stabilise my feet while running, because, you know, no shoes.</p>
<p>Because doing this thing was not hard enough already, and because the Lunas are perhaps still a bit too cushiony, and because my friend the Very Flat Cat forgot that I’m very suggestible after 11:00 in the morning when my prefrontal cortex takes the rest of the day off, I am now also the very shy owner of a pair of <a href="https://xeroshoes.com/shop/genesis/genesis-men/">Xero Genesis running sandals</a>:</p>
<p><img src="https://xeroshoes.com/wp-content/uploads/2018/03/Genesis_Limeade-3-4-770x500.jpg" alt="Image result for xero genesis"></p>
<p>The soles are only 5mm thick, and quite hard, being <a href="https://xeroshoes.com/warranty/">rated for a few thousand miles</a> and all. The upshot of this is that one’s feet have to work even harder than in the Lunas.</p>
<p>My first run in these was amazing: I could feel my feet reacting to every little pebble, and my running style having to adapt even more to the terrain.</p>
<p>However, there was a price to pay for all of that additional terrain feel (and the fact that I took a much longer maiden run than I should have): The next day, the tendons in my feet felt even more (ab)used than usual.</p>
<p>WITH GREAT POWER COMES GREAT RESPONSIBILITY, it seems.</p>
<p>Due to these shoes being so powerful, I have had to resign to introducing Xero running far more gradually than I had initially thought.</p>
<h1 id="vacation-based-thinking-driven-tool-sharpening-aka-the-wvv-2018-data-science-toolboxtm">Vacation-based-thinking-driven tool sharpening aka The WVV 2018 Data Science Toolbox(tm).</h1>
<p>During the <a href="/2018/07/10/weekly-head-voices-147-the-yearly-post-mpumalanga-post/">previously blogged-about</a> Mpumalanga vacation, the lack of alarms, devices, and other work accoutrements, resulted in there being ample time for staring-into-space-grade thinking sessions.</p>
<p>During one of these thinking sessions, I realised that I had somehow neglected my data science toolbox for a while.</p>
<p>At some point a few years back, I was so into ipython notebooks (what has now become jupyter) that I used them as my main work lab notes modality.</p>
<p>However, in the meantime I had fallen slightly out of love with the computational notebook style of data programming, because I had begun to develop doubts about their role in the analysis pipeline.</p>
<p><strong>interlude 1:</strong> <em>jupyter notebooks are nice for initial data exploration, and they’re especially useful for remote computation with embedded graphics. However, that initial momentum of discovery risks devolving into an unwieldy monolith of code snippets, data transformations and experiments. There’s a fine line to be walked between flexible experimentation on the one hand, and version-controlled, time-stamped, permutational and scientific rigour on the other.</em></p>
<p><strong>interlude 2:</strong> <em>I have to apologise for using the term “data science” in a non-comedic context. In spite of the inherent humour, it has turned into a usable blanket term for computational data understanding.</em></p>
<p>Due to my growing doubts in the order of Jupyter, and due to being occupied with less traditionally data sciencey work projects, I had unfortunately let my data science toolbox gather perhaps a bit too much dust.</p>
<p>Slightly more worrying than falling out of love with the Jupyter Notebooks (I still like them, I’m just not that madly in love anymore), was the more specific issue that I’d even let the datavis parts get a bit dusty.</p>
<p>Anyways.</p>
<p>Although I should probably write a more complete post about this, here is the list of ingredients of the official <em><strong>2018 WHV Data Science Toolbox(tm)</strong></em>:</p>
<h2 id="programming-language-and-library-ecosystem-python">Programming language and library ecosystem: Python.</h2>
<p>This language, in spite of its shortcomings, <em>dominates</em> the data science / machine learning world thanks to its STELLAR ecosystem.</p>
<p>numpy, pandas, scipy, scikit-*, tensorflow, pytorch, keras, cython… this snowball has turned into a pretty sizeable planet.</p>
<p>For this reason, it would be hard to justify any other choice for data science.</p>
<p>However, since I’ve been seeing more of Lisp and the rest of the ever-expanding programming language landscape, I can see (Python’s shortcomings as a programming language) clearly now.</p>
<p>In terms of interactive programming, Python beats the majority of practical programming languages, with Common Lisp being one notable exception.</p>
<p>However, it’s not functional enough, which engenders unnecessarily imperative, side-effecting code.  More specifically, it’s not expression-oriented.</p>
<p>More about this slightly further down. Maybe.</p>
<h2 id="datavis-anything-as-long-as-its-vega-or-vega-lite">Datavis: Anything, as long as it’s Vega or Vega-Lite.</h2>
<p>I spent a few years of my life wrangling <a href="https://d3js.org/">d3.js</a>, down to INNARD-LEVEL.</p>
<p>Mike Bostock’s idea of <a href="https://bost.ocks.org/mike/join/">data-element-joins</a> is genius, and internalising it was intellectually satisfying.</p>
<p>I thought that these d3 skillz would serve me well for decades (that’s WEEKS in javascript-time), but it turns out that there’s a new, even smarter kid in town.</p>
<p>(if it’s any consolation, the new kid can be considered the grand-child of d3.js.)</p>
<p><a href="https://vega.github.io/">vega and vega-lite</a> are so-called visualization grammars, or visualization DSLs (domain specific languages).</p>
<p>The upshot is that one codes up a chart, or a whole set of linked charts and their interactive behaviour, using a language that was designed for this purpose.</p>
<p>This chart code can be easily shared, or converted into interactive visual representations that can be embedded in applications, online or in print quality documents.</p>
<p>Genius!</p>
<p>With <a href="https://altair-viz.github.io/">Altair</a>, you can even send your pandas dataframes to vega and vega-lite charts all from the comfort of your slightly defective Python armchair.</p>
<h2 id="development-environment-pycharm">Development Environment: PyCharm.</h2>
<p>You knew it was not going to be Jupyter Notebooks, but you probably expected it to be <a href="https://vxlabs.com/tag/emacs/">Emacs</a>.</p>
<p>Well it’s not. Surprise!</p>
<p>The remote interpreter support in PyCharm enables me to connect to a Python virtual environment anywhere on the planet, which I often do.</p>
<p>The JetBrains wizards have optimised the remote communication of code intelligence, so completion, documentation and general code understanding is almost indistinguishable from that on a completely local project.</p>
<p>Being able to step through a <a href="https://vxlabs.com/2017/12/08/variational-autoencoder-in-pytorch-commented-and-annotated/"><em>remote</em> PyTorch neural network training iteration with the PyCharm debugger</a> or any other remote Python algorithmics is insightful.</p>
<p>Two notable drawbacks are visualization and long-running jobs.</p>
<p>For the long-running jobs I do tend to use Jupyter Notebooks or when at all possible <a href="https://mosh.org/">mosh</a>, which is amazing. However, because the primary modality is not the notebook, my code is versioned and organised into separate libraries which I can call into from notebook or mosh.</p>
<p>For visualization, it’s either connecting to the altair chart server via SSH pipe, dumping the chart to the unison-synced project, and/or a Jupyter Notebook.</p>
<h2 id="the-rest">The rest.</h2>
<p>Of course you use Postgres on an SSD for your data, and of course you know enough SQL to make short work of most of the heavy-weight transformations often required at the start your data crunching pipeline.</p>
<p>For all of my lab notes, reports, books, papers and blog posts, I use <a href="https://vxlabs.com/tag/orgmode/">Emacs Org mode</a>.</p>
<p>LaTeX math with live preview, live code snippets, SVG graphics, bibtex references, export to anything. This is one of the best ways to document your science.</p>
<h1 id="programming-language-addiction-update">Programming language addiction update.</h1>
<p>I spend far too much obsessing over programming languages, old and new.</p>
<p>For the past two weeks, I wasted even more precious time than usual reading up about programming languages.</p>
<p>Because I would really like to spend more of my time on other, perhaps more valuable activities, I’ve been trying to better define what it is I’m actually looking for.</p>
<p>Of course there is no single best programming language, but a whole set of good languages that map in intricate ways to different problem domains.</p>
<p>In spite of this, I have been pining for a language with, in order of importance:</p>
<ol>
<li>A Functional Programming DNA, with which I’m referring to a) <a href="https://en.wikipedia.org/wiki/Expression-oriented_programming_language">expression-orientedness</a>, b) a preference for <a href="https://en.wikipedia.org/wiki/Pure_function">pure functions</a>, and at a higher level, c) the modelling of reality as more or less explicit dataflows.</li>
<li>Interactive programming, with Common Lisp being the textbook example of this.</li>
<li>Great tooling and IDEs, meaning first-class support by something from JetBrains, Microsoft or Emacs.</li>
<li>Great concurrency and parallelism stories.</li>
<li>A great library ecosystem.</li>
<li>Modest memory use.</li>
</ol>
<p>Having just explicitly written this down for the first time (!! – it was consuming so much glucose just being kept amorphously swirling around in my brain) I can now mentally map some of my most recent language dalliances to these points.</p>
<h2 id="go">go</h2>
<p>This language is far too simple for my taste, but probably really great for teams.</p>
<p>I did recently take a more serious look when <a href="https://tutorials.botsfloor.com/develop-your-own-telegram-bot-with-golang-and-tbot-de726883b83c">setting up a telegram bot using tbot</a> and being amazed at how simple it was building web services like these using goroutines and channels.</p>
<p>Go satisfies points 3 to 6 from the list above. Makes sense that I decided to file this experiment away under “check when you need to put a webservice together REALLY QUICKLY”.</p>
<h2 id="rust">rust</h2>
<p>When I saw up that rust, surprisingly, is an expression-oriented language, I flew through the O’Reilly Programming Rust book I had bought previously as part of a bundle.</p>
<p>Evaluating rust by the list above, we award it a fractional 1 because expression-oriented, 3 due to jetbrains plugin amongst others, 4(ish) – great memory safety, but compared to clojure, concurrency and parallelism stories still have much room to grow, a solid 5 thanks to cargo and a very strong 6.</p>
<p>I filed this one away under “re-evaluate whenever you reach for your trusty C++”. (also, <a href="https://github.com/actix/actix-web">actix-web</a> looks amazing for super high performance microservices.)</p>
<h2 id="f">f#</h2>
<p>You didn’t see this one coming, did you?</p>
<p>Very strong 1 to 5 and a solid 6.</p>
<p>WAT?!</p>
<p>I’m currently working my way through <a href="https://pragprog.com/book/swdddf/domain-modeling-made-functional">Domain Modeling Made Functional</a> by Scott Wlaschin, who is also the author of the brilliant <a href="https://fsharpforfunandprofit.com/">f# for fun and profit</a> website.</p>
<p>In addition to f# hitting all 6 of my 2018 PL-requirements above, I’m slowly starting to see the advantages of having a real type system under the hood.</p>
<p>f# is a member of the <a href="https://en.wikipedia.org/wiki/ML_(programming_language)">ML-family</a> of functional languages, which have their origin in Lisp (some very naughty person removed all of the lovely parentheses I’m afraid…).</p>
<p>I hope that at some point I’ll have the opportunity to use f# in anger, at which point I’ll be able to report more concretely as to its suitability.</p>
<h1 id="the-end">The End</h1>
<p>Let me know in the comments what you think about any of this, or anything else.</p>
<p>I hope to meet you again in a few days, here or elsewhere.</p>
]]></content:encoded></item></channel></rss>