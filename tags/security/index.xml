<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>security on voices in my head</title><link>https://cpbotha.net/tags/security/</link><description>Recent content in security on voices in my head</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>cpbotha@cpbotha.net (Charl P. Botha)</managingEditor><webMaster>cpbotha@cpbotha.net (Charl P. Botha)</webMaster><lastBuildDate>Sun, 11 Dec 2016 15:34:26 +0000</lastBuildDate><atom:link href="https://cpbotha.net/tags/security/index.xml" rel="self" type="application/rss+xml"/><item><title>PGP Never Gonna Give You Up</title><link>https://cpbotha.net/2016/12/11/pgp-never-gonna-give-you-up/</link><pubDate>Sun, 11 Dec 2016 15:34:26 +0000</pubDate><author>cpbotha@cpbotha.net (Charl P. Botha)</author><guid>https://cpbotha.net/2016/12/11/pgp-never-gonna-give-you-up/</guid><description> (Summary: Cryptographically signing messages with my long-term PGP keys is too important to give up. Doing this on my Android telephone is easier than I thought. You should strengthen your secret key encryption if you&amp;rsquo;re also going to do this.)
Recently, Filippo Valsorda, cryptography expert and TLS guy at Cloudflare, wrote that he was giving up on PGP, or at least on long term PGP keys.
I agree with many of his points, especially the complexity of managing those keys, lack of forward secrecy (if someone were to steal my keys, they could decrypt all past conversations, unlike for example Signal) and accessibility (how do you verify a message with a baby on your left arm and your telephone in your right?</description><content:encoded><![CDATA[ <p><em>(Summary: Cryptographically signing messages with my long-term PGP keys is
too important to give up. Doing this on my Android telephone is easier than I
thought. You should strengthen your secret key encryption if you&rsquo;re also
going to do this.)</em></p>
<p>Recently, Filippo Valsorda, cryptography expert and TLS guy at Cloudflare,
<a href="https://blog.filippo.io/giving-up-on-long-term-pgp/">wrote that he was giving up on PGP, or at least on long term PGP keys</a>.</p>
<p>I agree with many of his points, especially the complexity of managing those
keys, lack of forward secrecy (if someone were to steal my keys, they could
decrypt all past conversations, unlike for example Signal) and accessibility
(how do you verify a message with a baby on your left arm and your telephone
in your right?). More generally, it makes a great deal of sense to make your
security a moving target, <a href="https://twitter.com/FiloSottile/status/807612248223051776">as one of the Ars Technica commenters
astutely summarised Filippo&rsquo;s ideas</a>.</p>
<h2 id="cryptographic-signatures-ftw">Cryptographic signatures FTW</h2>
<p>However, in spite of these factors, I am not yet ready to give up my PGP long-term keys.</p>
<p>Why is that?</p>
<p><em>Well, one of the most important uses of my long-term PGP keys is to
cryptographically sign messages that can be verified by people in my network
as having come from my hands.</em></p>
<p>For example, when I change my phone or re-flash its firmware (this has
happened 3 or 4 times over the past two months because Android), I send
PGP-signed messages to my main Signal correspondents with our new safety
numbers.</p>
<p>With all of these correspondents I have in the past either done some sort of
in-person formal PGP signing procedure, or I make use of the web of trust, or
I rely on <a href="https://keybase.io/">keybase</a>. My business cards even
have my key fingerprint on them (yes, I&rsquo;m one of those nerds).</p>
<p>At their ends, the recipients of my messages are able to determine with an
extremely high degree of confidence that <em>I</em> wrote the exact message they
opened.</p>
<h2 id="accessible-pgp-on-your-smartphone-with-openkeychain">Accessible PGP on your smartphone with OpenKeychain</h2>
<p>In terms of accessibility, the post did make me curious enough to experiment
with a mobile PGP solution, as I also did have to agree that I&rsquo;ve in the
past often had to wait until I was behind one of my own laptops or
workstations to PGP-verify a message.</p>
<p>As my one friend explained on Signal:</p>
<p>It&rsquo;s tricky to verify a message with a baby in your left hand and a telephone in your right!</p>
<p><a href="https://www.openkeychain.org/">OpenKeychain</a> to the rescue!</p>
<h3 id="strengthen-your-secret-key-encryption">Strengthen your secret key encryption</h3>
<p>Seeing that I was planning on carrying my long-term private keys around on my
telephone (BlackBerry PRIV, FDE encryption active FWIW), I had to double-check
the security of the secret key encryption.</p>
<p>It turns out that PGP encrypts each of your secret keys with a hash of the
passphrase you supply. My passphrase is significantly longer than the average,
and consists of random characters (uppercase, lowercase, numbers,
symbols). Passphrase length and complexity is by far the most important factor
determining the safety of your encrypted secret key.</p>
<p>However, I had the default SHA-1 hash (ouch) with only 64k
iterations. Iterating the hash is called <a href="https://en.wikipedia.org/wiki/Key_stretching">key stretching</a>: the
passphrase is hashed, that result is hashed, and so on, for very many times,
so that the testing of each passphrase takes more time, complicating
brute-force cracking approaches.</p>
<p>Inspired by <a href="http://nullprogram.com/blog/2012/06/24/">the writings of
Chris Wellons</a> who keeps his encrypted secret keys on a public website
(!!!), I reconfigured my private key encryption to use 1 million iterations of
the SHA-512 hash, and to use AES-256 for the encryption itself:</p>
<div class="highlight"><pre tabindex="0" style="color:#586e75;background-color:#eee8d5;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-shell" data-lang="shell">gpg --s2k-cipher-algo AES256 --s2k-digest-algo SHA512 --s2k-mode <span style="color:#2aa198;font-weight:bold">3</span> --s2k-count <span style="color:#2aa198;font-weight:bold">1000000</span> --edit-key 384435C7E77A4564
</code></pre></div><p>After typing that command, enter <code>passwd</code> at the prompt, then
follow the prompts. You will have to enter your passphrase, and then enter
your new passphrase twice.</p>
<p>You can then check that this operation is successful by using the command <code>gpg &ndash;list-packets secring.gpg</code>. My output looks as follows. Most important is that algo is 9 (AES-256), hash is 10 (SHA-512) and protect count in my case is just over 1 million.</p>
<pre><code>:secret key packet:
version 4, algo 1, created 1376407300, expires 0
skey[0]: [4096 bits]
skey[1]: [17 bits]
iter+salt S2K, algo: 9, SHA1 protection, hash: 10, salt: blabla
protect count: 1015808 (
protect IV:
encrypted stuff follows
keyid: 384435C7E77A4564
</code></pre>
<p>SHA-512 is the slowest hash which PGP offers (see <a href="http://thepasswordproject.com/oclhashcat_benchmarking">these oclHashcat
benchmarks for example</a>), which means that each iteration of a brute-force
password cracking attempt will take a bit longer / eat more GPU watts, which
is exactly what we want. You can increase the protect count for as long as the
delay on your smartphone is still tolerable.</p>
<p>However, remember that a stronger and longer passphrase is much better! (so we
do both)</p>
<p>Other than that, remember that <a href="/2016/11/27/android-security-in-2016-is-a-mess/">Android security is far
from good</a>, so do as much as you can to keep your phone safe (keep up with
OS updates, stay away from unofficial app markets, and so on).</p>
<h3 id="use-your-keys-with-openkeychain">Use your keys with OpenKeychain</h3>
<p>I was pleasantly surprised to learn that I could directly import both my
<code>secring.pgp</code> and <code>pubring.gpg</code> files from my
<code>~/.gnupg</code> directory. Right after selecting secring.pgp for import,
the UI looked like this:</p>








<figure><a href="/wp-content/uploads/2016/12/Screenshot_20161209-075007.png">
    <img
        
            
            src="/wp-content/uploads/2016/12/Screenshot_20161209-075007-576x1024.png"
        /> </a>
</figure>

<p>You can see the old 1024 bit key I made in 2000 to use for my Debian
activities, and the 4096 bit key I currently use.</p>
<p>After importing your secret and public keyring, you are able to encrypt,
decrypt, sign and verify any files or clipboard contents on your Android
phone:</p>








<figure><a href="/wp-content/uploads/2016/12/Screenshot_20161211-170851.png">
    <img
        
            
            src="/wp-content/uploads/2016/12/Screenshot_20161211-170851-576x1024.png"
        /> </a>
</figure>

<p>So if I receive something like this via Signal:</p>
<pre><code>-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA512

Never gonna give you up, never gonna let you down
Never gonna run around and desert you
Never gonna make you cry, never gonna say goodbye
Never gonna tell a lie and hurt you
-----BEGIN PGP SIGNATURE-----

iQFEBAEBCgAuJxxTdGVmYW4gdmFuIGRlciBXYWx0IDxzdGVmYW5Ac3VuLmFjLnph
PgUCWE2aUQAKCRDl/rykoDTdZZgvB/9Yi76C9o7xIgQ/d85WbnKDjNosp5uXzgHm
A2y+cxZDLVNLTMrlCTXOMRulaJMvb3Ocsvi+/gQVUF49fT74EXlZpZvvdTzhQfa2
VvQPjZmf/9PNzB3pgUtEDBwyLC21C6dqU+y7mPk91Aw1m8cKBQUSHmQxa7F/dCFc
DCuWOcXjNt5vLQ2Q8mQBMpHaG9J5+4/0k/GEHAVcm55fzb7o2hJyEVb3EoYy8Pls
khIwJpZVdwyY4FPoLXW3iJYanC5qoOoS81YLCyLEyin0jH56ve05uHbF0XcaNY4h
NupkN2D+Dt4X2m2FXieM27eG/Ty9hVx7n7B3pT4P9KqeFDX8hQ/q
=c7j9
-----END PGP SIGNATURE-----
</code></pre>
<p>I long-press, copy the message and then select “read from
clipboard” from OpenKeychain&rsquo;s Encrypt/Decrypt screen, which, if
everything checks out, shows me the following message:</p>








<figure><a href="/wp-content/uploads/2016/12/Screenshot_20161211-202817.png">
    <img
        
            
            src="/wp-content/uploads/2016/12/Screenshot_20161211-202817-576x1024.png"
        /> </a>
</figure>

<p>I can now rest assured that <a href="http://mentat.za.net/">this
specific buddy of mine</a> is never gonna give me up and is never gonna let me
down.</p>
<p>Cryptographically signing a message is equally easy, except that you&rsquo;ll
have to enter that long passphrase of yours. OpenKeychain will then make the
signed and optionally encrypted text text available for sharing to any app, or
for copying and pasting:</p>








<figure><a href="/wp-content/uploads/2016/12/Screenshot_20161211-174458.png">
    <img
        
            
            src="/wp-content/uploads/2016/12/Screenshot_20161211-174458-576x1024.png"
        /> </a>
</figure>

<p>Easy peasy, and tested under all sorts of usually-PGP-unfriendly conditions!</p>
<h2 id="conclusion">Conclusion</h2>
<p>Maintaining PGP long-term keys certainly has its issues, but the possibility
of cryptographically signing any message so that recipients can establish with
high confidence that it originated from you is too important to give up.</p>
<p>With an app like OpenKeychain and sufficiently strong passphrase hashing and
secret key encryption, you are able to use your keys with ease from your
telephone.</p>
<p>Granted, you are trading in some security for this convenience. However, given
the choice between discarding my PGP keys completely, vs. taking these steps,
I&rsquo;ll hold on to my keys for a little while longer.</p>
<p>In order to mitigate the potential damage of one of my long-term keys being
compromised, I have resolved to generate and start using a new private key as
soon as I run through my current batch of business cards, and to continue
rotating like this in the future.</p>
<p>Let me know in the comments what you think. Do you know of a better
alternative for remotely verifying the identity and messages of your
correspondents?</p>
]]></content:encoded></item><item><title>Android security in 2016 is a mess.</title><link>https://cpbotha.net/2016/11/27/android-security-in-2016-is-a-mess/</link><pubDate>Sun, 27 Nov 2016 11:41:36 +0000</pubDate><author>cpbotha@cpbotha.net (Charl P. Botha)</author><guid>https://cpbotha.net/2016/11/27/android-security-in-2016-is-a-mess/</guid><description> Summary Your phone probably contains banking, payment and personal information that can be remotely stolen via numerous known and unknown bugs in the Android software. This is attractive to criminals.
Vendors (LG, Samsung, Xiaomi, etc.), after selling you their phone, have no incentive to keep your phone&amp;rsquo;s software up to date with Google&amp;rsquo;s fixes. Your Android phone is probably out of date and therefore a gaping security hole through which attackers can steal your stuff from the safety of their own laptops.</description><content:encoded><![CDATA[ <h1 id="summary">Summary</h1>
<p>Your phone probably contains banking, payment and personal information that can be remotely stolen via numerous known and unknown bugs in the Android software. This is attractive to criminals.</p>
<p>Vendors (LG, Samsung, Xiaomi, etc.), after selling you their phone, have no incentive to keep your phone&rsquo;s software up to date with Google&rsquo;s fixes. Your Android phone is probably out of date and therefore a gaping security hole through which attackers can steal your stuff from the safety of their own laptops.</p>
<p>Read on for more.








<figure><a href="/wp-content/uploads/2016/11/google_android_active_base.png">
    <img
        
            
            src="/wp-content/uploads/2016/11/google_android_active_base.png"
        
            alt="Between 1.3 and 1.4 billion Google Android phones in March of 2016. Click image for source."/> </a><figcaption>
            <p>Between 1.3 and 1.4 billion Google Android phones in March of 2016. Click image for source.</p>
        </figcaption>
</figure>
</p>
<h1 id="an-illustration-mediatek--blu-phones-are-uploading-your-data">An illustration: MediaTek / BLU phones are uploading your data.</h1>
<p>You might recently have read about <a href="https://web.archive.org/web/20161117073724/https://hackernoon.com/no-one-cares-about-the-security-of-your-unlocked-android-phone-cd8ad4aae4c5?gi=e0e2979fddb">the incident with the popular BLU phones sold by Amazon in the US</a> (interestingly, the author deleted their article from both hackernoon.com and from medium; I now link to the Wayback Machine&rsquo;s stored copy). It turned out that these phones were regularly sending bunches of personal information to servers in China: text messages, call logs, contact lists and so forth. After more investigation, it came to light that this was happening via a low-level piece of software called ADUPS.</p>
<p>When Google had previously updated its systems to check for ADUPS, MediaTek (they make the chipset in millions of low-end phones) simply modified their system software to evade Google&rsquo;s checks. Nice one MediaTek!</p>
<p>This is a painful example of the fact that the software on your phone, although based on Google&rsquo;s software, is customised by the phone vendor. The further frustrating effect of this is that when Google releases security patches to Android (<a href="https://source.android.com/security/bulletin/index.html">which they do regularly</a>), there is very little incentive for the phone vendor to spend money on updating phones they have already sold.</p>
<h1 id="what-about-a-list-phone-makers">What about A-list phone makers?</h1>
<p>I bought my LG G3 in 2014 here in South Africa. It was LG&rsquo;s flagship in that year, and sold extremely well. LG is a well-known smartphone OEM.</p>
<p>However, only because I took steps to flash the official KDZ image (V30a-ZAF-XX), which consumers would normally not do, am I now running Android 6. However, my security patch level is 2016-03, meaning there are 6 months of security updates I don&rsquo;t have. (You can check your <strong>Android security patch level</strong> by going to <em>Settings | General | About Phone | Software info</em>.)</p>
<p>Before you think six months lag is not too bad, here&rsquo;s a nice example vulnerability from <a href="https://source.android.com/security/bulletin/2016-11-01.html">the November 1 Android security bulletin</a>:</p>
<blockquote>
<p>The most severe of these issues is a Critical security vulnerability that could enable remote code execution on an affected device through multiple methods such as email, web browsing, and MMS when processing media files.</p>
</blockquote>
<p>In short, your phone could be hacked wide open from afar through a single innocent-looking email, MMS or web-page.</p>
<p>My friend&rsquo;s South African LG G3 is still stuck on Android 5.0 (V20n-ZAF-XX). Most probably this is being blocked due to his carrier (MTN). In any case, 5.0 does not even show the security patch level, so we have no idea how many months of security fixes this phone is missing.</p>
<p>(<a href="https://lgsecurity.lge.com/security_updates.html">LG seems to be tracking Google&rsquo;s security updates quite well</a>, but somehow these updates are not reaching phones.)</p>
<h2 id="a-scary-little-aside">A scary little aside</h2>
<p>I just tried Check Point Labs' <a href="https://www.checkpoint.com/resources/quadrooter-vulnerability-consumer/">QuadRooter Scanner app</a> on my “updated” LG G3, and this is what I saw:








<figure><a href="/wp-content/uploads/2016/11/Screenshot_2016-11-27-20-55-12.png">
    <img
        
            
            src="/wp-content/uploads/2016/11/Screenshot_2016-11-27-20-55-12-576x1024.png"
        
            alt="LG G3 with Marshmallow and Android security patch level 2016-03 is vulnerable to QuadRooter."/> </a><figcaption>
            <p>LG G3 with Marshmallow and Android security patch level 2016-03 is vulnerable to QuadRooter.</p>
        </figcaption>
</figure>
</p>
<p>So my manually updated LG G3 is still very much vulnerable to QuadRooter. In theory, my phone could be (or already has been) <a href="http://www.techradar.com/news/phone-and-communications/mobile-phones/android-quadrooter-vulnerability-should-you-be-worried-1326286">rooted and pillaged by any old innocent-looking app</a>, although I keep mostly to the official Play Market, so the risk is slightly mitigated.</p>
<p>At this stage, even as a relatively knowledgeable user, there&rsquo;s not much I can do to patch my phone against this vulnerability.</p>
<h1 id="googles-leniency-cuts-both-ways-more-than-a-billion-android-users-but-most-of-them-vulnerable">Google&rsquo;s leniency cuts both ways: More than a billion Android users, but most of them vulnerable.</h1>
<p>It&rsquo;s fantastic that Google&rsquo;s openness and leniency with Android has helped to make smartphone technology accessible to more than a billion users (probably closer to 2 billion taking into account Chinese Android phones not connected to Google services, see <a href="http://ben-evans.com/benedictevans/2016/7/25/platform-wars-final-score">Ben Evans&rsquo;s post</a>). However, this same leniency allows manufacturers to be irresponsible about keeping their customers safe.</p>
<p>The fundamental problem here is that there are a great deal of Android phone vendors who make phones from absolute entry-level to top-of-the-line flagships, who have very little incentive to spend money on post-sale security updates.</p>
<p>Once you&rsquo;ve paid for the phone, you&rsquo;re not important enough anymore to have a secure(ish) telephone.</p>
<h1 id="what-can-we-do">What can we do?</h1>
<h2 id="buy-an-iphone-no-really">Buy an iPhone. No really.</h2>
<p>I&rsquo;ve been using Android since the HTC Desire Z. I love Android, because I love Linux which I have been using since 1993.</p>
<p>However, if money is no object, my only sound advice can be to <strong>buy an iPhone</strong>. Apple is still shipping security updates, albeit on iOS 9, for the iPhone 4s which was released in 2011 (5 years ago). The iPhone 5 is still being kept up to date with iOS 10.</p>
<p>Furthermore, in terms of phone encryption, <a href="https://blog.cryptographyengineering.com/2016/11/24/android-n-encryption/">iOS 4, released 6 years ago, was already more advanced than than Android 7 Nougat</a>, released in August of this year. In short, already then Apple made better choices in how exactly different files are encrypted, whilst Android implemented full disk encryption, which for the smartphone usecase is not the right choice. In Nougat, Android has finally also changed to file-based, but they&rsquo;re missing important parts of the puzzle. <a href="https://blog.cryptographyengineering.com/2016/11/24/android-n-encryption/">The phone encryption blog post</a> I link to is insightful, please take a look.</p>
<h2 id="stick-with-android-pixel-or-nexus">Stick with Android Pixel or Nexus.</h2>
<p>If you prefer sticking with Android, the best choice is getting an official Google device, which means either a Nexus or a new Pixel. <a href="https://support.google.com/pixelphone/answer/4457705#pixel_phones&amp;nexus_devices">Google&rsquo;s policy for Pixel and Nexus security</a> states that they will ship security updates either for three years after device introduction, or for 1.5 years after the device was last officially sold from the Google Store, whichever is longer.</p>
<p>Unfortunately, iPhones are really expensive, and Google&rsquo;s new Pixel devices are also aiming for the higher-end market. The previous generation Nexus phones offer a more mid-range but very temporary reprieve.</p>
<p>In other words, most normal consumers on a budget, i.e. the largest part of the Android user base, actually of the smartphone-using world, are stuck with insecure, vulnerable phones. This is not cool.</p>
<h2 id="consider-installing-a-custom-rom">Consider installing a custom ROM.</h2>
<p>Installing a custom ROM such as Cyanogenmod brings with it another set of issues with regard to the phone being rooted, and with regard to driver-level support of proprietary hardware. In any case, this is not something your average consumer will have access to, but Android gurus can certainly apply.</p>
<p>Efforts like <a href="https://copperhead.co/android/">CopperheadOS</a> (hardened Android) are certainly promising, but it will be quite a while before they are accessible to the largest group of Android users.</p>
<p><strong>Update:</strong> David Metcalfe pointed out in the comments that you can buy a secure Android phone from Copperhead.  If you are in the US or Canada, and you have some budget, you could buy the <a href="https://copperhead.co/android/buy">LG Nexus 5x or the Huawei Nexus 6P with CopperheadOS pre-installed</a>. It&rsquo;s great that this is available, but due to price and geography not really accessible to most Android users.</p>
<h2 id="keep-manufacturers-honest">Keep manufacturers honest.</h2>
<p>Ideally, Google starts taking a much harder line with manufacturers who put Android on their phones. They could for example maintain and publish a list of phone models that are kept up to date with the latest security fixes, and a list of those that aren&rsquo;t.</p>
<p>I was happy to see that at least <a href="http://news.softpedia.com/news/huawei-is-the-best-oem-at-applying-android-security-updates-505767.shtml">Huawei has a pretty good record</a> in terms of keeping their Android phones up to date (although the results were probably skewed as they counted the Huawei-produced Nexus 6P phones, and these formed the majority of the test set, doh). This factor will play a role in the next smartphone that I buy.</p>
<p>Do you know of any (other) manufacturers of more affordable Android phones who are committed to keeping their users safe? Please let me know in the comments!</p>
<h1 id="addendum-android-phones-with-acceptable-security-update-records">Addendum: Android phones with acceptable security update records</h1>
<h2 id="blackberry-priv-dtek50-and-dtek60">Blackberry PRIV, DTEK50 and DTEK60</h2>
<p>lobste.rs user jabberwock <a href="https://lobste.rs/s/8g2nkz/android_security_2016_is_mess/comments/4p7rwr#c_4p7rwr">tipped me off to the fact that Blackberry&rsquo;s Android phones get monthly security updates</a>. Read more at <a href="http://crackberry.com/blackberry-priv-dtek50-and-dtek60-november-updates-now-available">CrackBerry</a> and here in the <a href="http://support.blackberry.com/kb/articleDetail?articleNumber=000038666">BlackBerry Android security bulletin for November</a>: It looks like these phones receive monthly updates (<strong>when not blocked by the carrier, <em>sigh</em></strong>)** **and have already received the November 2016 update.</p>
<p>Here is <a href="http://blogs.blackberry.com/2015/11/managing-android-security-patching-for-priv/">the original blog post where BlackBerry explained their security patching policies for the PRIV</a>.</p>
<h1 id="updates">Updates.</h1>
<h2 id="wednesday-2020-02-26">Wednesday 2020-02-26.</h2>
<p>I wanted to post some relevant updates, so here goes (okay just one):</p>
<ul>
<li><a href="https://securityboulevard.com/2019/03/android-security-is-a-hot-mess-yet-again/">Android Security is a Hot Mess (yet Again)</a>, March 15, 2019.</li>
</ul>
]]></content:encoded></item><item><title>When we can, let’s use Signal instead of WhatsApp.</title><link>https://cpbotha.net/2016/01/02/when-we-can-lets-use-signal-instead-of-whatsapp/</link><pubDate>Sat, 02 Jan 2016 09:38:11 +0000</pubDate><author>cpbotha@cpbotha.net (Charl P. Botha)</author><guid>https://cpbotha.net/2016/01/02/when-we-can-lets-use-signal-instead-of-whatsapp/</guid><description> (Post updated on January 8, 2021. See section at the end.)
Signal, the open source messaging and voice calling app that does end-to-end encryption. The whole world is using WhatsApp to message each other. I often do too, because I want to inter-operate with the rest of the world.
However, WhatsApp belongs to Facebook.
Although Facebook has promised otherwise (fast-forward a few years: Yes, they did break that promise. See updates at the end of this post.</description><content:encoded><![CDATA[ <p><em>(Post updated on January 8, 2021. See section at the end.)</em></p>
<figure>
<img alt="Screenshot of Signal." src="https://whispersystems.org/blog/images/signal-new.jpg"/>
<figcaption>Signal, the open source messaging and voice calling app that does end-to-end encryption.</figcaption></figure> 
<p>The whole world is using WhatsApp to message each other. I often do too,
because I want to inter-operate with the rest of the world.</p>
<p>However, WhatsApp belongs to Facebook.</p>
<p>Although Facebook <a href="http://www.huffingtonpost.com/2014/02/24/zuckerberg-facebook-whatsapp_n_4848205.html">has promised otherwise</a> (fast-forward a few years: Yes,
they did break that promise. See updates at the end of this post.), the
temptation to link all of your WhatsApp messages with Facebook logins (a
straight-forward process, as they have the mobile phone numbers of a great
number of their users) must be <strong>quite</strong> tempting to the people at
Facebook. Imagine how well they would then be able to target their advertising,
based on their access to both your Facebook profile and your private WhatsApp
messages!</p>
<p>Fortunately, we now have an open source app, called <a href="https://signal.org/">Signal</a> (available on
<a href="https://play.google.com/store/apps/details?id=org.thoughtcrime.securesms&amp;hl=en">Android</a>, <a href="https://itunes.apple.com/za/app/signal-private-messenger/id874139669?mt=8">IOS</a> and the desktop), which performs end-to-end encryption
on all messages and voice calls that go through it. This means that absolutely
no-one is able to read your messages or eavesdrop on your voice calls, except
the intended recipients.</p>
<p>My request is that you get your contacts to install and <a href="https://theintercept.com/2015/03/02/signal-iphones-encrypted-messaging-app-now-supports-text/">start using Signal</a>
instead of WhatsApp wherever possible. At the very least some of our messages
will not be accessible to various large corporations and any other prying
eyes. If the security argument is not enough for you, there is one more
extremely important topic: Signal handles animated gifs better than WhatsApp,
at least on Android. (Telegram supports them on both Android on IOS, but it is
by default less secure than Signal). See here the results of my experiments:</p>
<blockquote class="twitter-tweet"><p dir="ltr" lang="en">Animated GIF support (most important feature in any messaging app): WhatsApp fail, Viber fail, Telegram pass, Signal pass on Android.</p>— Charl Botha 😷 #Masks4All (@cvoxel) <a href="https://twitter.com/cvoxel/status/682942239463587841?ref_src=twsrc%5Etfw">January 1, 2016</a></blockquote> <script async="" charset="utf-8" src="https://platform.twitter.com/widgets.js"></script>
<h1 id="updates">Updates</h1>
<h2 id="january-8-2021">January 8, 2021</h2>
<p>By now, if you use WhatsApp, the app will have forced you to accept the new
privacy and data sharing agreement.</p>
<p>As is explained in this <a href="https://arstechnica.com/tech-policy/2021/01/whatsapp-users-must-share-their-data-with-facebook-or-stop-using-the-app/">post on
arstechnica</a>:</p>
<blockquote>
<p>Under the new terms, Facebook reserves the right to share collected data with its family of companies.</p>
</blockquote>
<p>In other words, even more of the personal data of 2 billion or so WhatsApp
users will be integrated with everything Facebook knows about them and about
you, including all of your connections to each other on all of the facebook
platforms, including facebook itself, instagram and whatsapp.</p>
<p>Like many of you, to interoperate with the world I do need to keep WhatsApp,
but I would greatly prefer chatting with you on Signal.</p>
<h2 id="august-25-2016">August 25, 2016</h2>
<p><a href="http://www.theverge.com/2016/8/25/12638698/whatsapp-to-start-sharing-user-data-with-facebook">The Verge reported that WhatsApp will now officially begin sharing data with
Facebook</a>. They will indeed link up telephone numbers and social networks,
meaning that both parties will get a tremendous boost in what they know about
you. I don&rsquo;t want to say I told you so, but I told you so. ;)</p>
]]></content:encoded></item><item><title>Dear USA, my data has left your building.</title><link>https://cpbotha.net/2013/09/15/dear-usa-my-data-has-left-your-building/</link><pubDate>Sun, 15 Sep 2013 18:02:00 +0000</pubDate><author>cpbotha@cpbotha.net (Charl P. Botha)</author><guid>https://cpbotha.net/2013/09/15/dear-usa-my-data-has-left-your-building/</guid><description> NSA, GCHQ, Prism, FISA, Project Bullrun, Sigint.
After Edward Snowden, former CIA and NSA employee, started revealing how massively, intensely and easily we are all being spied upon by the intelligence agencies of various governments, the terms above have suddenly been spending a great deal more time in the media. Image by BLOGGING via TYPEWRITER
It turns out that government agencies are allowed to extract, at a whim, your and my data from service providers, such as Google, Microsoft and Yahoo.</description><content:encoded><![CDATA[ <p>NSA, GCHQ, Prism, FISA, Project Bullrun, Sigint.</p>
<p>After <a href="http://en.wikipedia.org/wiki/Edward_Snowden" title="Edward Snowden wikipedia page">Edward Snowden</a>, former CIA and NSA employee, started revealing how massively, intensely and <em>easily</em> we are all being spied upon by the intelligence agencies of various governments, the terms above have suddenly been spending a great deal more time in the media.








<figure><a href="/wp-content/uploads/2013/09/tumblr_mp3xgwYLsi1qz82gvo1_1280.jpg">
    <img
        
            
            src="/wp-content/uploads/2013/09/tumblr_mp3xgwYLsi1qz82gvo1_1280.jpg"
        
            alt="Image by BLOGGING via TYPEWRITER"/> </a><figcaption>
            <p>Image by BLOGGING via TYPEWRITER</p>
        </figcaption>
</figure>
</p>
<p>It turns out that government agencies are allowed to extract, at a whim, your and my data from service providers, such as Google, Microsoft and Yahoo. There is no real legal process (unless you can call a secret judge in a secret court giving a secret order a real legal process), <em>especially</em> if you’re not a US citizen, and the providers that have been forced to give up your data in this way are not allowed to notify you about your digital self being violated. So even if they <em>say</em> that you shouldn’t worry, <em>you can never be entirely sure</em>.</p>
<p>Furthermore, it has also been revealed that the NSA has for years being acquiring encryption keys via legal (secretly forcing companies to give them the keys) and extra-legal (simply hacking into company servers) means. Even worse, they have for years been deliberately introducing security weaknesses into software products and encryption software in order to be able to crack open your data even more easily.</p>
<p>You can read more about this state of affairs in <a href="http://www.theguardian.com/world/the-nsa-files" title="The Guardian NSA files">The Guardian’s NSA files</a>. The Guardian has been doing a sterling job of analysing and bringing to light the depths to which our governments have sunk. There’s a whole lot of information, and most of it is quite upsetting.</p>
<p>For me the final straw was when secure email service <a href="http://lavabit.com/" title="lavabit website with close-down message">lavabit</a> voluntarily shut itself down, when faced with the prospect of being forced to leak user information to the US government without being allowed to tell anyone. The message on the site is quite chilling, and concludes with the following:</p>
<blockquote>
<p>This experience has taught me one very important lesson: without congressional action or a strong judicial precedent, I would <em>strongly</em> recommend against anyone trusting their private data to a company with physical ties to the United States.</p>
</blockquote>
<p>At this point, I was a super happy and pretty heavy user of a number of US-based services, including GMail (all my email, about 40000 conversations consisting of 60000 mails, that’s excluding my work email which I also hosted on GMail), Google+ Photos (all my photos, about 21000 of ’em), Google Drive, Dropbox (50G of data spread out over 120000 files). <em>In all cases, I still consider these to be best of class services.</em> In putting my money where my mouth is, I was paying both Google and Dropbox for extra storage.</p>
<p>I also had no problem with Google filtering through my email to show me targeted advertising. This is the deal I had with them. I also had no problem with the possibility of someone getting my data after due legal process. However, the idea that some NSA or other government agency flunky could quite easily stick their grubby paws into my data, and that I would never know about this, was too much.</p>
<p>There’s probably nothing much of interest in my data. However, it has become a matter of principle; Privacy is a basic human right. <a href="http://www.wired.com/politics/security/commentary/securitymatters/2006/05/70886" title="value of privacy by Bruce Schneier">Here’s an old essay by Bruce Schneier</a> if you need to read more about why privacy is so important.</p>
<p>In short: <strong>It was time to extricate all of my lovely data from probably well-meaning US companies, thanks to the ridiculously powerful and secretive NSA, and thanks to all of its shadowy counterparts around the world.</strong></p>
<p>Here’s how I did it:</p>
<ul>
<li>Considered building another low-cost Linux server, or even a Raspberry Pi. Decided against this due to time required for configuration and acquired a Synology DS213j NAS, which is at this moment standing on the desk about 1 metre to my left. My recommendation: Just get this, you won’t be sorry.</li>
<li>Downloaded 60000 emails to Synology using Thunderbird mail client. Deleted everything from GMail. Google engineers assure me that after a few months, data will <em>really</em> be gone.</li>
<li>My webhoster (<a href="https://www.webfaction.com/">WebFaction</a>) receives mail for all my domains. My Synology retrieves mail every 5 minutes via POP (you can set this up via Roundcube on the Synology) and deletes it from WebFaction.</li>
<li>Outgoing mail is relayed by the Synology via the WebFaction SMTP server. I don’t have to worry too much about blacklisting and whatnot, my hoster does this.</li>
<li>I’m back to interacting with my mail using Thunderbird and IMAP SSL. The loss of GMail conversation view was initially really REALLY painful. People have forgotten the ancient art of quoting. However, I’ve configured Thunderbird to archive all mail to year-stamped archive folders, and to put my sent mail there. Poor-man’s Conversation View! (the <a href="https://addons.mozilla.org/en-us/thunderbird/addon/gmail-conversation-view/">conversations plugin</a> is wonky. it’s shocking how much the availability of GMail, which works really well, has stunted the development of alternative email clients) Importantly, I am now able to use <a href="http://www.openpgp.org/">OpenPGP</a> again for the strong encryption and cryptographic signing of my emails.</li>
<li>On my Android telephone (whoops…) I am using <a href="https://play.google.com/store/apps/details?id=com.kaitenmail&amp;hl=en" title="Kaiten email on the Google Play store">the Kaiten IMAP client</a>.</li>
<li>All the data I had in Dropbox is now being synced between the Synology, two laptops and a workstation using <a href="http://labs.bittorrent.com/experiments/sync.html" title="bittorrent sync">BitTorrent Sync</a>. This peer-to-peer syncing system is still a little rough around the edges, but falls squarely in the category of “Best Things Since Sliced Bread”, and it’s <em>FAST</em>. CloudStation, Synology’s dropbox-inspired solution, was just far too slow on my Synology model.</li>
<li>My photos (21000 of them) have been downloaded from Google+ Photos (thank you <a href="https://www.google.com/takeout/" title="Google Takeout">Google Takeout</a>) and are now being served from the Synology using PhotoStation.</li>
<li>My music (5400+ tracks) is downloading from Google Music as we speak, and will be served from the Synology using AudioStation.</li>
<li>I make incremental backups of everything to an encrypted external USB drive, using <a href="http://www.dirvish.org/" title="dirvish website">dirvish</a>. I will probably add an extra external drive to the mix and try to keep that off site.</li>
</ul>
<p>It’s been an interesting process moving my stuff out, and getting used to these alternative systems is sometimes slightly uncomfortable, but I am quite happy with the end result. I hope that more people will take this step, and I really hope that more and easier-to-use alternatives for secure email (such as <a href="http://www.mailpile.is/" title="mailpile website">mailpile</a>) and for ubiquitous private data will become available.</p>
<h1 id="addendum-2013-09-16">Addendum 2013-09-16</h1>
<p>My <a href="https://news.ycombinator.com/item?id=6392322">submission of this post</a> spent some time on the Hacker News front page, and from there was <a href="http://www.reddit.com/r/technology/comments/1mhpqj/dear_usa_my_data_has_left_your_building/">picked up by reddit</a> as well. This brought many comments, a number of which were positive and thoughtful, and a number of which that were far less so. It’s amazing how anonymity and comment sections can bring out the worst in people. (if you have to know, the Hacker News community is generally MILES more polite than reddit)</p>
<p>In any case, I wanted to clarify an issue or two: After moving my data away from GMail and Dropbox, I am not under any impression that my data is now secure. I can still be hacked. My hardware and software could be full of backdoors. My email will still be read as it jumps from server to server, probably ending up in someone else’s GMail. :) However, if more people were to move their data out to their own premises, it becomes more complicated and costly for government agencies to monitor us all. At the moment, the NSA cuts deals with a few large email and other cloud service providers, and with that they’re able to monitor large swathes of users. However, if more of those users were to move away, many more deals have to be cut and servers hacked, costing more time and more money. Add to that increased used of OpenPGP (which I do use, and mention in my post), and it becomes even more difficult. I know that I’m just a drop in a bucket, but hey, at least I am a drop in a bucket!</p>
<p>My goal with posting this was to show that it’s relatively easy to move much of your data away. I have the feeling that many of the most impolite anonymous commenters still store their data with cloud providers, and would really prefer to believe that there are no worthwhile alternatives, hence all the ad hominem attacks.</p>
<p>Fortunately, each polite and humane comment makes up for a whole pile of bad ones. :)</p>
]]></content:encoded></item><item><title>What I did this, err, summer</title><link>https://cpbotha.net/2008/11/17/what-i-did-this-err-summer/</link><pubDate>Mon, 17 Nov 2008 21:20:15 +0000</pubDate><author>cpbotha@cpbotha.net (Charl P. Botha)</author><guid>https://cpbotha.net/2008/11/17/what-i-did-this-err-summer/</guid><description> Taking a hint from Joe, aka Swimgeek, here’s a summary of my life since the previous time we spoke:
The VCBM 2008 workshop, my first attempt at playing the organising conference chair, went swimmingly. Two days of solid presentations, a lovely dinner at Van der Dussen (no Ronald McDonald in sight!) and meeting up with many old friends. I stopped stressing during the conference dinner. I joined the ranks of the intelligentsia (As opposed to the millions of plebs with iPhones – oh stop whining and look at the stats.</description><content:encoded><![CDATA[ <p>Taking a hint from Joe, aka <a href="http://www.swimgeek.com/blog/" title="Link to Swimgeek's blog">Swimgeek</a>, here’s a summary of my life since the previous time we spoke:</p>
<ul>
<li>The <a href="http://vcbm.org/2008" title="Link to VCBM 2008 website">VCBM 2008 workshop</a>, my first attempt at playing the organising conference chair, went swimmingly.  Two days of solid presentations, a lovely dinner at Van der Dussen (no Ronald McDonald in sight!) and meeting up with many old friends.  I stopped stressing during the conference dinner.</li>
<li>I joined the ranks of the intelligentsia (As opposed to the millions of plebs with iPhones – oh stop whining and look at the stats.  Can’t find the stats?  Go figure out how to copy and paste, then get back to me. :) ) and acquired a Nokia E71.  <em>Best. Gadget. EVAR.</em></li>
<li>Had a fan-tas-tic holiday in South Africa.  Had profound conversations and the most raucous get-togethers with best friends and family.  Realised again how extremely lucky I am with people I’m this close with, on two different continents.  Linked up with my dad for the first time in too many years, which was cool.</li>
<li>Migrated my extremely complex todo system (I’m a foaming-at-the-mouth <a href="http://en.wikipedia.org/wiki/Getting_Things_Done" title="Link to Wikipedia article on GTD">GTD</a> follower) from <a href="http://todoist.com/" title="Link to Todoist">todoist</a> to a local installation of the open-source RoR-based <a href="http://www.rousette.org.uk/projects/" title="Link to Tracks website.">Tracks</a> software.  Todoist is really cool, but it’s very much deadline-oriented, whilst in the GTD world deadlines are just so passé.  DAMN I’m with it.</li>
<li>My laptop was sort of stolen and then returned 5 minutes later.  Besides the acute trauma that this caused, it got me wondering about the security of the Windows XP Encrypted File System thingy that I use to encrypt some of the more sensitive, err, documents on my laptop.  On Windows 2000, the fact that on a local install the administrator was the default data recovery agent (DRA), made it possible to decrypt a user’s files without having to crack that user’s password.  On a local install of XP, this is fortunately NOT the case.  I repeat, <a href="http://support.microsoft.com/kb/887414" title="Link to MS KB article concerning DRA on XP."><strong>on a local install of XP there is no default recovery policy</strong></a>.  In other words, a laptop thief needs to <strong>crack your password to decrypt your EFS encryption</strong>.  You can double check this by <a href="http://www.microsoft.com/downloads/details.aspx?FamilyID=9c70306d-0ef3-4b0c-ab61-81da208f5c47&amp;displaylang=en" title="Link to efsinfo">downloading efsinfo</a> and running it on your files with “efsinfo /u /r your_files”.  It should confirm that there’s no recovery agent.  You should also check the strength of your Windows passwords with <a href="http://ophcrack.sourceforge.net/" title="Link to ophcrack.">ophcrack</a>.  Your EFS is only as strong as the user password protecting it.  After my little episode, I’ve deleted most of those sensitive, err, documents from my laptop (they’re duplicated on a server at home) and encrypted even larger parts of my laptop hard drive, just in case.</li>
</ul>
<p>Now I’m supposed to conclude this blow-by-blow with something profound.  I know, I’ll end with a quote attributed to Plato that I first saw in the PhD thesis of a friendly colleague.  At the time it made quite an impression on me:</p>
<blockquote>
<p><span class="huge">Be kind, for everyone you meet is fighting a hard battle.</span></p>
</blockquote>
<p>Heck, it still does.</p>
]]></content:encoded></item></channel></rss>