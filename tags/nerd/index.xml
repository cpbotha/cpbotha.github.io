<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nerd on voices in my head</title><link>https://cpbotha.net/tags/nerd/</link><description>Recent content in nerd on voices in my head</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>cpbotha@cpbotha.net (Charl P. Botha)</managingEditor><webMaster>cpbotha@cpbotha.net (Charl P. Botha)</webMaster><lastBuildDate>Fri, 22 Jan 2016 09:04:25 +0000</lastBuildDate><atom:link href="https://cpbotha.net/tags/nerd/index.xml" rel="self" type="application/rss+xml"/><item><title>Fix the unusable window resize border in Gnome Flashback Metacity on Ubuntu</title><link>https://cpbotha.net/2016/01/22/fix-the-unusable-window-resize-border-in-gnome-flashback-metacity-on-ubuntu/</link><pubDate>Fri, 22 Jan 2016 09:04:25 +0000</pubDate><author>cpbotha@cpbotha.net (Charl P. Botha)</author><guid>https://cpbotha.net/2016/01/22/fix-the-unusable-window-resize-border-in-gnome-flashback-metacity-on-ubuntu/</guid><description> On Ubuntu I mostly use Gnome Flashback with Metacity, along with the brilliant Synapse app starter / file finder. I do this in spite of having a beefy NVIDIA GPU in this Core i7 workstation, because the OpenGL compositing on this 2560×1440 display makes video conferencing really slow, and because I do OpenGL development and need to have maximum performance for the app I’m working on.
However, it irritated me to no end that the window borders were so thin that I was not able to grab them for a resize.</description><content:encoded><![CDATA[ <p>On Ubuntu I mostly use <a href="http://www.webupd8.org/2014/04/how-to-install-and-tweak-gnome.html">Gnome Flashback with Metacity</a>, along with the brilliant <a href="http://lifehacker.com/5704221/synapse-is-a-super-fast-tightly-integrated-application-launcher-for-linux">Synapse app starter / file finder</a>. I do this in spite of having a beefy NVIDIA GPU in this Core i7 workstation, because the OpenGL compositing on this 2560×1440 display makes video conferencing really slow, and because I do OpenGL development and need to have maximum performance for the app I’m working on.</p>
<p>However, it irritated me to no end that the window borders were so thin that I was not able to grab them for a resize. Adding insult to injury, there were only the four standard themes in Settings | Appearance, namely Adwaita, Ambiance, Radiance and High Contrast, none of which has usable borders.</p>
<p>The solution is to use the Gnome Tweak Tool (package gnome-tweak-tool) to change the Window theme to something with better borders. I used <em>Watercolor</em> (from the metacity-themes package), and set the rest up as follows on the appearance tab:</p>
<img alt="tweak-tool-theme" class="alignnone size-full wp-image-2342" data-attachment-id="2342" data-comments-opened="1" data-image-description="" data-image-meta='{"aperture":"0","credit":"","camera":"","caption":"","created_timestamp":"0","copyright":"","focal_length":"0","iso":"0","shutter_speed":"0","title":"","orientation":"0"}' data-image-title="tweak-tool-theme" data-large-file="https://cpbotha.net/wp-content/uploads/2016/01/tweak-tool-theme.png" data-medium-file="https://cpbotha.net/wp-content/uploads/2016/01/tweak-tool-theme-300x116.png" data-orig-file="https://cpbotha.net/wp-content/uploads/2016/01/tweak-tool-theme.png" data-orig-size="732,283" data-permalink="https://cpbotha.net/2016/01/22/fix-the-unusable-window-resize-border-in-gnome-flashback-metacity-on-ubuntu/tweak-tool-theme/" height="283" sizes="(max-width: 709px) 85vw, (max-width: 909px) 67vw, (max-width: 984px) 61vw, (max-width: 1362px) 45vw, 600px" src="https://cpbotha.net/wp-content/uploads/2016/01/tweak-tool-theme.png" srcset="https://cpbotha.net/wp-content/uploads/2016/01/tweak-tool-theme.png 732w, https://cpbotha.net/wp-content/uploads/2016/01/tweak-tool-theme-300x116.png 300w" width="732"/>
<p>Once this is done, your window borders should look like this:</p>
<img alt="watercolor-window-borders" class="alignnone size-full wp-image-2344" data-attachment-id="2344" data-comments-opened="1" data-image-description="" data-image-meta='{"aperture":"0","credit":"","camera":"","caption":"","created_timestamp":"0","copyright":"","focal_length":"0","iso":"0","shutter_speed":"0","title":"","orientation":"0"}' data-image-title="watercolor-window-borders" data-large-file="https://cpbotha.net/wp-content/uploads/2016/01/watercolor-window-borders.png" data-medium-file="https://cpbotha.net/wp-content/uploads/2016/01/watercolor-window-borders-300x205.png" data-orig-file="https://cpbotha.net/wp-content/uploads/2016/01/watercolor-window-borders.png" data-orig-size="400,273" data-permalink="https://cpbotha.net/2016/01/22/fix-the-unusable-window-resize-border-in-gnome-flashback-metacity-on-ubuntu/watercolor-window-borders/" height="273" sizes="(max-width: 400px) 85vw, 400px" src="https://cpbotha.net/wp-content/uploads/2016/01/watercolor-window-borders.png" srcset="https://cpbotha.net/wp-content/uploads/2016/01/watercolor-window-borders.png 400w, https://cpbotha.net/wp-content/uploads/2016/01/watercolor-window-borders-300x205.png 300w" width="400"/>
<p>Now you can resize your windows again, AND you can enjoy the snappiness of Gnome Flashback with Metacity!</p>
]]></content:encoded></item><item><title>Python 2.6 enabled VTK 5.4 Windows binaries</title><link>https://cpbotha.net/2009/08/13/python-2-6-enabled-vtk-5-4-windows-binaries/</link><pubDate>Thu, 13 Aug 2009 21:37:32 +0000</pubDate><author>cpbotha@cpbotha.net (Charl P. Botha)</author><guid>https://cpbotha.net/2009/08/13/python-2-6-enabled-vtk-5-4-windows-binaries/</guid><description> You can always check my Latest VTK Windows binaries page to make sure you have the latest blog posting and hence the latest binaries. It also links to the “old” Python 2.5 VTK 5.4.1 binaries. I’ve made available my home-baked VTK 5.4.2 Windows binaries. These have the new-and-improved version of my python-exception-patches integrated (more about this in a future post; a serious dead-lock has been fixed and as a side-effect, you can now run multiple VTK pipelines in different threads!</description><content:encoded><![CDATA[ <p><a href="http://www.vtk.org/"><img alt="" border="0" class="alignnone" height="100" src="http://vtk.org/opensourcelogos/vtk100.png" style="border: 0pt none;" width="456"/></a></p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; padding: 0px;">
<em>You can always check my <a href="http://cpbotha.net/software/latest-vtk-windows-binaries/" style="color: #0060ff; text-decoration: underline; padding: 0px; margin: 0px;" title="Latest VTK Windows binaries page.">Latest VTK Windows binaries page</a> to make sure you have the latest blog posting and hence the latest binaries.  It also links to the “old” Python 2.5 VTK 5.4.1 binaries.</em>
</p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; padding: 0px;">
  I’ve made available my home-baked VTK 5.4.2 Windows binaries.  These have the <a href="http://code.google.com/p/devide/source/detail?spec=svn3800&amp;r=3732" title="Link to new and improved Python exceptions patch.">new-and-improved version of my python-exception-patches</a> integrated (more about this in a future post; a serious dead-lock has been fixed and as a side-effect, you can now run multiple VTK pipelines in different threads!) and have been built with Visual Studio 2008 (9.0) SP1 on Windows XP SP3 with full Python 2.6 support.  Get the binaries (or my patched source) from the two links below.  You want the binaries if you want to use VTK from Python.
</p>
<ul>
<li>Binaries: <a href="http://visualisation.tudelft.nl/~cpbotha/files/vtk_itk/vtk-5.4/VTK-5-4-2-Py26-VS9sp1-win32-cpbotha.net.zip" title="Link to vtk 5.4.2 python 2.6 win32 binaries">VTK-5-4-2-Py26-VS9sp1-win32-cpbotha.net.zip</a></li>
<li>Source: <a href="http://visualisation.tudelft.nl/~cpbotha/files/vtk_itk/vtk-5.4/VTK-5-4-2-source-cpbotha.net.zip" title="Link to patched VTK 5.4.2 source I used to bulid this.">VTK-5-4-2-source-cpbotha.net.zip</a></li>
</ul>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; padding: 0px;">
<strong>IMPORTANT</strong>: you might have to install the MS VS2008 SP1 <a href="http://www.microsoft.com/downloads/details.aspx?familyid=A5C84275-3B97-4AB7-A40D-3802B2AF5FC2&amp;displaylang=en" title="Link to MS VS2008 SP redistributable">vcredist_x86</a> package (free!) if you want to use these DLLs (thanks Jelle for pointing this out).  This might not be necessary if you already have one or more of the MS development environments installed.
</p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; padding: 0px;">
<strong>P</strong><strong>lease leave a comment on this blog posting if you use these or just hate them</strong>. It’s almost like postcard-ware, but with blog comments. Please also link to this page and not directly to the download location, thanks!
</p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; padding: 0px;">
  To use this from Python, you need to add the following to your PATH:
</p>
<ul style="margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 40px; list-style-type: square; padding: 0px;">
<li style="margin-top: 0px; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; padding: 0px;">
    d:\opt\VTK\bin
  </li>
</ul>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; padding: 0px;">
  You also need to add <strong>all of the above</strong> to PYTHONPATH, as well as the following:
</p>
<ul style="margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 40px; list-style-type: square; padding: 0px;">
<li style="margin-top: 0px; margin-right: 0px; margin-bottom: 0.5em; margin-left: 0px; padding: 0px;">
    d:\opt\VTK\lib\site-packages
  </li>
</ul>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; padding: 0px;">
  … where d:\opt is the drive and directory where you unpacked the ZIP file.
</p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; padding: 0px;">
  Once you’ve done this and logged out and in again, “import vtk” should work at the Python prompt. Shameless plug: you can use my free <a href="../software/envedit" style="color: #0060ff; text-decoration: underline; padding: 0px; margin: 0px;" title="envedit homepage">envedit</a> software to do the environment editing. It beats the default XP editing thingy.
</p>
<p style="margin-top: 0px; margin-right: 0px; margin-bottom: 1.5em; margin-left: 0px; padding: 0px;">
</p>]]></content:encoded></item><item><title>Python 2.5 enabled VTK 5.4 Windows binaries</title><link>https://cpbotha.net/2009/05/23/python-25-enabled-vtk-54-windows-binaries/</link><pubDate>Sat, 23 May 2009 19:27:26 +0000</pubDate><author>cpbotha@cpbotha.net (Charl P. Botha)</author><guid>https://cpbotha.net/2009/05/23/python-25-enabled-vtk-54-windows-binaries/</guid><description> You can always check my Latest VTK Windows binaries page to make sure you have the latest blog posting and hence the latest binaries.
I’ve made available my home-baked VTK 5.4 (actually build from a CVS VTK-5-4-1 tag checkout) Windows binaries. These have the new-and-improved version of my python-exception-patches integrated (more about this in a future post; a serious dead-lock has been fixed and as a side-effect, you can now run multiple VTK pipelines in different threads!</description><content:encoded><![CDATA[ <img alt="" class="alignnone" height="100" src="http://vtk.org/opensourcelogos/vtk100.png" style="border: 0pt none;" width="456"/>
<p><em>You can always check my <a href="http://cpbotha.net/software/latest-vtk-windows-binaries/" title="Latest VTK Windows binaries page.">Latest VTK Windows binaries page</a> to make sure you have the latest blog posting and hence the latest binaries.</em></p>
<p>I’ve made available my home-baked VTK 5.4 (actually build from a CVS VTK-5-4-1 tag checkout) Windows binaries.  These have the <a href="http://code.google.com/p/devide/source/browse/trunk/johannes/patches/pyvtk_tryexcept_and_pyexceptions_20090519_vtk-5-4-1.diff" title="link to new and improved pyexceptions patch">new-and-improved version of my python-exception-patches</a> integrated (more about this in a future post; a serious dead-lock has been fixed and as a side-effect, you can now run multiple VTK pipelines in different threads!) and have been built with Visual Studio 2005 (8.0) SP1 on Windows XP2 with full Python 2.5 support.  Get the binaries (or my patched source) by going <a href="http://visualisation.tudelft.nl/~cpbotha/files/vtk_itk/vtk-5.4/" title="Link to VTK 5.4 binaries download directory">here</a>.  You want the binaries if you want to use VTK from Python.</p>
<p><strong>IMPORTANT</strong>: you might have to install the MS VS2005 <a href="http://www.microsoft.com/downloads/details.aspx?familyid=32BC1BEE-A3F9-4C13-9C99-220B62A191EE&amp;displaylang=en" title="link to vcredist_x86.exe">vcredist_x86</a> package (free!) if you want to use these DLLs (thanks Jelle for pointing this out).  This might not be necessary if you already have one or more of the MS development environments installed.</p>
<p><strong>P****lease leave a comment on this blog posting if you use these or just hate them</strong>. It’s almost like postcard-ware, but with blog comments. Please also link to this page and not directly to the download location, thanks!</p>
<p>To use this from Python, you need to add the following to your PATH:</p>
<ul>
<li>d:\opt\VTK\bin</li>
</ul>
<p>You also need to add <strong>all of the above</strong> to PYTHONPATH, as well as the following:</p>
<ul>
<li>d:\opt\VTK\lib\site-packages</li>
</ul>
<p>… where d:\opt is the drive and directory where you unpacked the ZIP file.</p>
<p>Once you’ve done this and logged out and in again, “import vtk” should work at the Python prompt. Shameless plug: you can use my free <a href="../software/envedit" title="envedit homepage">envedit</a> software to do the environment editing. It beats the default XP editing thingy.</p>
]]></content:encoded></item><item><title>Lust</title><link>https://cpbotha.net/2008/01/08/lust/</link><pubDate>Tue, 08 Jan 2008 12:50:46 +0000</pubDate><author>cpbotha@cpbotha.net (Charl P. Botha)</author><guid>https://cpbotha.net/2008/01/08/lust/</guid><description> More or less every two years, I am overcome by uncontrollable lust.
Lust for some fresh computing hardware, that is. YEAH!
1.5 years ago it was the HP NC8430 laptop, 2 years before that my beloved HP NC6000, and slightly short of two years before that the infinitely heavy stoeptegel-1 (I still think there’s a mini-blackhole in there somewhere).
It’s almost that time again, so I have begun shopping around (in WAB time, of course) for an affordable yet absurdly fast desktop for use at home, in my secret laboratory.</description><content:encoded><![CDATA[ <p>More or less every two years, I am overcome by uncontrollable lust.</p>
<p>Lust for some fresh computing hardware, that is.  YEAH!</p>
<p>1.5 years ago it was the <a href="http://cpbotha.net/2006/07/22/new-new-laptop-laptop/" title="Link to blog posting about my NC8430 laptop">HP NC8430 laptop</a>, 2 years before that my beloved <a href="http://cpbotha.net/2004/05/26/laptop-no-2/" title="Link to NC6000 blog posting.">HP NC6000</a>, and slightly short of two years before that the infinitely heavy <a href="http://cpbotha.net/2002/07/17/toe-matj-toe-sei-not-enaf-taim/" title="Link to blog posting also talking about my first laptop.">stoeptegel-1</a> (I still think there’s a mini-blackhole in there somewhere).</p>
<p>It’s almost <em>that time</em> again, so I have begun shopping around (in WAB time, of course) for an affordable yet absurdly fast desktop for use at home, in my secret laboratory.  Oh wait, there’s no secret laboratory.  Really.</p>
<p>I was planning to get something with the <a href="http://tweakers.net/pricewatch/150358/intel-core-2-quad-q6600.html" title="Tweakers price-watch for Q6600">Intel Core 2 Quad Q6600</a> (4 cores at 2.4 GHz, 2 x MB L2 cache, 1066 MHz quad-clocked FSB), but <a href="http://graphics.tudelft.nl/~jorik/" title="Jorik's website (kinda)">Jorik</a> fortunately recommended (thanks!) waiting for the soon-to-be-available Penryn 45nm quad cores.   Seems <a href="http://core.tweakers.net/nieuws/51163/intel-presenteert-zestien-nieuwe-processors-met-45nm-techniek.html" title="Intel announces 16 new 45nm CPUs">Intel has announced</a> the definite release of 16 new 45nm CPUs at the CES, including the similarly price-ranged but far more desirable <a href="http://tweakers.net/pricewatch/161727/intel-core-2-quad-q9450.html" title="Tweakers price-watch for Q9450">Quad Q9450</a> (4 cores at 2.66 GHz, 2 x 6MB L2 cache, 1333 MHz quad-clocked FSB).</p>
<p>Throw 4 GB of DDR2 RAM, a Hitachi P7K500 half terabyte hard drive, a passively cooled GeForce 8600 GT 512MB and some 64-bit Ubuntu goodness at it, and you have some serious workstation action that doesn’t even leave you half-destitute!</p>
]]></content:encoded></item></channel></rss>