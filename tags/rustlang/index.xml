<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rustlang on voices in my head</title><link>https://cpbotha.net/tags/rustlang/</link><description>Recent content in rustlang on voices in my head</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>cpbotha@cpbotha.net (Charl P. Botha)</managingEditor><webMaster>cpbotha@cpbotha.net (Charl P. Botha)</webMaster><lastBuildDate>Mon, 15 Nov 2021 21:50:00 +0200</lastBuildDate><atom:link href="https://cpbotha.net/tags/rustlang/index.xml" rel="self" type="application/rss+xml"/><item><title>Weekly Head Voices #236: The surprising power of consistent chipping</title><link>https://cpbotha.net/2021/11/15/weekly-head-voices-236-surprising-power-of-consistent-chipping/</link><pubDate>Mon, 15 Nov 2021 21:50:00 +0200</pubDate><author>cpbotha@cpbotha.net (Charl P. Botha)</author><guid>https://cpbotha.net/2021/11/15/weekly-head-voices-236-surprising-power-of-consistent-chipping/</guid><description> This 236th edition of the Weekly Head Voices looks back at the three (sorry!) weeks from Monday October 25 to Sunday November 14, 2021.
What will the beholder think? First things first: Do you notice something different about me I mean my blog?
I don&amp;rsquo;t know how most readers respond to this sort of a thing, but I can really appreciat, in a non-professional way of course, good typography on a personal blog.</description><content:encoded><![CDATA[ <p>This 236th edition of the Weekly Head Voices looks back at the three (sorry!)
weeks from Monday October 25 to Sunday November 14, 2021.</p>








<figure><a href="facing-strand.jpg">
    <img
        
            sizes="(min-width: 35em) 1200px, 100vw"
              
            srcset='
            
                   https://cpbotha.net/2021/11/15/weekly-head-voices-236-surprising-power-of-consistent-chipping/facing-strand_hue5ad910e14412370c56758d9e1b42688_3284795_480x0_resize_q75_box.jpg 480w,
            
                   https://cpbotha.net/2021/11/15/weekly-head-voices-236-surprising-power-of-consistent-chipping/facing-strand_hue5ad910e14412370c56758d9e1b42688_3284795_800x0_resize_q75_box.jpg 800w,
            
                   https://cpbotha.net/2021/11/15/weekly-head-voices-236-surprising-power-of-consistent-chipping/facing-strand_hue5ad910e14412370c56758d9e1b42688_3284795_1200x0_resize_q75_box.jpg 1200w,
            
                   https://cpbotha.net/2021/11/15/weekly-head-voices-236-surprising-power-of-consistent-chipping/facing-strand_hue5ad910e14412370c56758d9e1b42688_3284795_1500x0_resize_q75_box.jpg 1500w,
            '

            
            
            src="https://cpbotha.net/2021/11/15/weekly-head-voices-236-surprising-power-of-consistent-chipping/facing-strand_hue5ad910e14412370c56758d9e1b42688_3284795_800x0_resize_q75_box.jpg"
            

        /> </a>
</figure>

<h2 id="what-will-the-beholder-think">What will the beholder think?</h2>
<p>First things first: Do you notice something different about me I mean my blog?</p>
<p>I don&rsquo;t know how most readers respond to this sort of a thing, but I can really
appreciat, in a non-professional way of course, good typography on a personal
blog.</p>
<p>Over the past few years I&rsquo;ve been tweaking the CSS here and there to make small
improvements to the WHV typography, but I&rsquo;ve never been really happy with the
font.</p>
<p>That is, until I ran into <a href="https://alexanderobenauer.com/">Alexander Obenauer&rsquo;s blog</a> and just new that I had to
have the same serif on mine.</p>
<p>The font is called <a href="https://fonts.google.com/specimen/Newsreader">Newsreader</a>. I&rsquo;m currently enjoying the subtly new look, I
hope you do too.</p>
<h2 id="new-diagramming-tool-of-the-insert-suitable-period-here">New diagramming tool of the [insert suitable period here]</h2>
<p>Via Hacker News (henceforth just &ldquo;HN&rdquo;) I ran into this <a href="https://offbyone.us/posts/why-is-excalidraw-so-good/">entertaining and
charming review of a drawing tool called &ldquo;excalidraw&rdquo;</a>.</p>
<p>Searching a little further, I could see that it had become in a relatively
short timespan a darling of the otherwise hyper-critical HN community.</p>
<p>Personally, I&rsquo;m always on the lookout for any tools which I think could help me
visualize some of my ideas or plans better.</p>
<p>Excalidraw is great at boxes and arrows, which is fortunate, since about 95% of
my ideas and plans are based on different ways of connecting boxes and arrows.</p>
<p>As an aside: So far, I&rsquo;ve gotten by far the most use out of Notability on the
iPad (with 1st gen Apple Pencil), but I never produce as many diagrams as I
keep on imagining that I should be doing.</p>
<p>Upon first use, Excalidraw indeed struck me with how little friction it offers
to the act of sketching out <em>stuff</em>.</p>
<p>I especially like how the authors have somehow managed to merge super-easy
drawing on the computer with the production of diagrams that look like they&rsquo;ve
been made on a paper notebook, whilst still remaining fully vectorized.</p>
<p>Let me know if you&rsquo;ve used this for anything interesting, or if you have any
other diagramming tricks you&rsquo;d like to share.</p>
<h2 id="ok-rust-i-give-up">Ok Rust, I give up</h2>
<p>Back in July of 2018, in <a href="/2018/07/17/weekly-head-voices-148-data-stylist/#programming-language-addiction-update">WHV #148</a>, I wrote that after noting the fact that Rust
was an expression-oriented language (I love those) and subsequently reading the
O&rsquo;Reilly <em>Programming Rust</em> book, I had filed away the language under
&ldquo;re-evaluate whenever you reach for your trusty C++&rdquo;.</p>
<p>As a programming language enthusiast, I should have know that that &ldquo;filing
away&rdquo; was merely a postponement of the inevitable.</p>
<p>Recently, in hobby time, probably because I had not yet selected a new book to
read, and because I&rsquo;m going through a bit of a programming phase (err&hellip;), I
unfiled Rust and started going through some more of the materials.</p>
<p>My current feeling is: Hot durnit! Rust may just be the fastest functional
language I have access to!</p>
<p>I&rsquo;ve been doing a number of the <a href="https://exercism.org/tracks/rust">exercism exercises</a>, and after often pulling out
a pattern match for compact yet readable solutions, I&rsquo;ve been getting a strong
wolf-in-sheep&rsquo;s-clothing feeling.</p>
<p>Rust brings a number of core functional programming principles to an
exceptionally performant programming platform.</p>
<p>Sometimes there are still more nuts and bolts than I would like to see (to be
expected from a systems language that wants to give you full control), but this
mix of low-level and subjectively high-level functional programming is still a
remarkable achievement in my book.</p>
<p><em>Of course</em> I have no real-world applications in mind, unless <a href="https://adventofcode.com/">Advent of Code</a>
counts, but Rust currently makes for great programming practice.</p>
<h2 id="keep-on-keeping-on">Keep on keeping on</h2>
<p>In WHV #214 I wrote about <a href="/2021/01/26/weekly-head-voices-214-one-main-thing/#one-main-thing">writing down that One Main Thing that you&rsquo;d like to
get done every day</a>.</p>
<p>Day job is currently not entirely conducive to this mode of work, and that&rsquo;s
putting it lightly.</p>
<p>Still, on most days I do remember to select and then write that thing down.</p>
<p>Most recently, I was dragging such an item along with me for what felt like
weeks.</p>
<p>Every morning I did the Alt-W Ctrl-Y finger dance (that&rsquo;s Emacs for copy
paste), and I experienced the concomitant pang of internally facing
embarrassment.</p>
<p>Often there would be no progress (because meetings and other non-maker work),
but on some days I would excavate the equivalent of a generously filled
teaspoon of dirt. (<a href="https://youtu.be/4%5FC86o5dE%5Fc">Doctor Flammond&rsquo;s tunnel</a> anybody?)</p>
<p>Slowly but surely, the Thing neared completion, until one day (weirdly still to
my pleasant surprise) it was done, never to be copy-pasted again.</p>
<p>My happy little mental note was: Just keep on dragging One Main Thing with
you. It&rsquo;s not on the list because it&rsquo;s going to get completed, but rather
because it&rsquo;s the thing that you just have to keep on chipping away at,
<em>especially</em> when progress seems almost invisible.</p>
]]></content:encoded></item><item><title>Weekly Head Voices #148: Data stylist.</title><link>https://cpbotha.net/2018/07/17/weekly-head-voices-148-data-stylist/</link><pubDate>Tue, 17 Jul 2018 07:22:30 +0000</pubDate><author>cpbotha@cpbotha.net (Charl P. Botha)</author><guid>https://cpbotha.net/2018/07/17/weekly-head-voices-148-data-stylist/</guid><description> Ridiculously fun trail in Paarl somewhere. (Photo taken by Trail Friend #1. Trail Friend #2 cropped from picture, because no permission to appear on the internets!)
This post covers the week from Monday July 9 to Sunday July 15.
The business part of my week was unfairly dominated by far too much after-work obsessing over programming languages, with which I seem to have an unhealthy (or perhaps not) obsession.</description><content:encoded><![CDATA[ 







<figure><a href="/wp-content/uploads/2018/07/drakenstein_trail.jpg">
    <img
        
            
            src="/wp-content/uploads/2018/07/drakenstein_trail-1024x241.jpg"
        
            alt="Ridiculously fun trail in Paarl somewhere. (Photo taken by Trail Friend #1. Trail Friend #2 cropped from picture, because no permission to appear on the internets!)"/> </a><figcaption>
            <p>Ridiculously fun trail in Paarl somewhere. (Photo taken by Trail Friend #1. Trail Friend #2 cropped from picture, because no permission to appear on the internets!)</p>
        </figcaption>
</figure>

<p>This post covers the week from Monday July 9 to Sunday July 15.</p>
<p>The business part of my week was unfairly dominated by far too much after-work obsessing over programming languages, with which I seem to have an unhealthy (or perhaps not) obsession.</p>
<p>I will externalise some of these thoughts further down in this post.</p>
<p>I’m starting with a weekend / running update, which should be reasonably safe for non-nerds to read. However, after that, the nerd dial will go up to 11 with stuff about tools and programming languages right up to the end of the post.</p>
<p>I would have wanted to use the adjective “face-melting”, but I’m not sure if any intensity of nerdery could ever reach that level.</p>
<p>We can dream.</p>
<h1 id="weekend-running-update">Weekend running update</h1>
<p>Most fortunately the weekend had other plans and supplied us with at least 2.5 parties, the first of which even culminated in a <em>ridiculously</em> fun trail run in the mountains on the winter morning after.</p>
<p>The winter morning sun was just perfect, the company was great, and I had forgotten all forms of performance tracking devices at home.</p>
<p>Readers with bionic eyes might notice the Lunas on my feet.</p>
<p>I have now ran just over 260km in them, but, in a surprise twist to the regular readers of this blog, my biological equipment has still not yet completely adjusted to the new style of locomotion.</p>
<p>The latest victim seems to be one of Tom, Dick and Harry, the tendons running under the medial <a href="https://en.wikipedia.org/wiki/Malleolus">malleolus</a> of my left foot, also known as that big knob on your inside ankle. Tom (the primary suspect in this case according to Trail Friend #1 who is knowledgable with regard to these matters, being a running foot surgeon and all), Dick and Harry <a href="https://radiopaedia.org/articles/posterior-ankle-tendons-mnemonic">are also known as the *T*ibialis posterior, flexor *D*igitorum longus and the flexor *H*allucis longus</a>.</p>
<p>They currently have to work extra hard to stabilise my feet while running, because, you know, no shoes.</p>
<p>Because doing this thing was not hard enough already, and because the Lunas are perhaps still a bit too cushiony, and because my friend the Very Flat Cat forgot that I’m very suggestible after 11:00 in the morning when my prefrontal cortex takes the rest of the day off, I am now also the very shy owner of a pair of <a href="https://xeroshoes.com/shop/genesis/genesis-men/">Xero Genesis running sandals</a>:</p>
<p><img src="https://xeroshoes.com/wp-content/uploads/2018/03/Genesis_Limeade-3-4-770x500.jpg" alt="Image result for xero genesis"></p>
<p>The soles are only 5mm thick, and quite hard, being <a href="https://xeroshoes.com/warranty/">rated for a few thousand miles</a> and all. The upshot of this is that one’s feet have to work even harder than in the Lunas.</p>
<p>My first run in these was amazing: I could feel my feet reacting to every little pebble, and my running style having to adapt even more to the terrain.</p>
<p>However, there was a price to pay for all of that additional terrain feel (and the fact that I took a much longer maiden run than I should have): The next day, the tendons in my feet felt even more (ab)used than usual.</p>
<p>WITH GREAT POWER COMES GREAT RESPONSIBILITY, it seems.</p>
<p>Due to these shoes being so powerful, I have had to resign to introducing Xero running far more gradually than I had initially thought.</p>
<h1 id="vacation-based-thinking-driven-tool-sharpening-aka-the-wvv-2018-data-science-toolboxtm">Vacation-based-thinking-driven tool sharpening aka The WVV 2018 Data Science Toolbox(tm).</h1>
<p>During the <a href="/2018/07/10/weekly-head-voices-147-the-yearly-post-mpumalanga-post/">previously blogged-about</a> Mpumalanga vacation, the lack of alarms, devices, and other work accoutrements, resulted in there being ample time for staring-into-space-grade thinking sessions.</p>
<p>During one of these thinking sessions, I realised that I had somehow neglected my data science toolbox for a while.</p>
<p>At some point a few years back, I was so into ipython notebooks (what has now become jupyter) that I used them as my main work lab notes modality.</p>
<p>However, in the meantime I had fallen slightly out of love with the computational notebook style of data programming, because I had begun to develop doubts about their role in the analysis pipeline.</p>
<p><strong>interlude 1:</strong> <em>jupyter notebooks are nice for initial data exploration, and they’re especially useful for remote computation with embedded graphics. However, that initial momentum of discovery risks devolving into an unwieldy monolith of code snippets, data transformations and experiments. There’s a fine line to be walked between flexible experimentation on the one hand, and version-controlled, time-stamped, permutational and scientific rigour on the other.</em></p>
<p><strong>interlude 2:</strong> <em>I have to apologise for using the term “data science” in a non-comedic context. In spite of the inherent humour, it has turned into a usable blanket term for computational data understanding.</em></p>
<p>Due to my growing doubts in the order of Jupyter, and due to being occupied with less traditionally data sciencey work projects, I had unfortunately let my data science toolbox gather perhaps a bit too much dust.</p>
<p>Slightly more worrying than falling out of love with the Jupyter Notebooks (I still like them, I’m just not that madly in love anymore), was the more specific issue that I’d even let the datavis parts get a bit dusty.</p>
<p>Anyways.</p>
<p>Although I should probably write a more complete post about this, here is the list of ingredients of the official <em><strong>2018 WHV Data Science Toolbox(tm)</strong></em>:</p>
<h2 id="programming-language-and-library-ecosystem-python">Programming language and library ecosystem: Python.</h2>
<p>This language, in spite of its shortcomings, <em>dominates</em> the data science / machine learning world thanks to its STELLAR ecosystem.</p>
<p>numpy, pandas, scipy, scikit-*, tensorflow, pytorch, keras, cython… this snowball has turned into a pretty sizeable planet.</p>
<p>For this reason, it would be hard to justify any other choice for data science.</p>
<p>However, since I’ve been seeing more of Lisp and the rest of the ever-expanding programming language landscape, I can see (Python’s shortcomings as a programming language) clearly now.</p>
<p>In terms of interactive programming, Python beats the majority of practical programming languages, with Common Lisp being one notable exception.</p>
<p>However, it’s not functional enough, which engenders unnecessarily imperative, side-effecting code.  More specifically, it’s not expression-oriented.</p>
<p>More about this slightly further down. Maybe.</p>
<h2 id="datavis-anything-as-long-as-its-vega-or-vega-lite">Datavis: Anything, as long as it’s Vega or Vega-Lite.</h2>
<p>I spent a few years of my life wrangling <a href="https://d3js.org/">d3.js</a>, down to INNARD-LEVEL.</p>
<p>Mike Bostock’s idea of <a href="https://bost.ocks.org/mike/join/">data-element-joins</a> is genius, and internalising it was intellectually satisfying.</p>
<p>I thought that these d3 skillz would serve me well for decades (that’s WEEKS in javascript-time), but it turns out that there’s a new, even smarter kid in town.</p>
<p>(if it’s any consolation, the new kid can be considered the grand-child of d3.js.)</p>
<p><a href="https://vega.github.io/">vega and vega-lite</a> are so-called visualization grammars, or visualization DSLs (domain specific languages).</p>
<p>The upshot is that one codes up a chart, or a whole set of linked charts and their interactive behaviour, using a language that was designed for this purpose.</p>
<p>This chart code can be easily shared, or converted into interactive visual representations that can be embedded in applications, online or in print quality documents.</p>
<p>Genius!</p>
<p>With <a href="https://altair-viz.github.io/">Altair</a>, you can even send your pandas dataframes to vega and vega-lite charts all from the comfort of your slightly defective Python armchair.</p>
<h2 id="development-environment-pycharm">Development Environment: PyCharm.</h2>
<p>You knew it was not going to be Jupyter Notebooks, but you probably expected it to be <a href="https://vxlabs.com/tag/emacs/">Emacs</a>.</p>
<p>Well it’s not. Surprise!</p>
<p>The remote interpreter support in PyCharm enables me to connect to a Python virtual environment anywhere on the planet, which I often do.</p>
<p>The JetBrains wizards have optimised the remote communication of code intelligence, so completion, documentation and general code understanding is almost indistinguishable from that on a completely local project.</p>
<p>Being able to step through a <a href="https://vxlabs.com/2017/12/08/variational-autoencoder-in-pytorch-commented-and-annotated/"><em>remote</em> PyTorch neural network training iteration with the PyCharm debugger</a> or any other remote Python algorithmics is insightful.</p>
<p>Two notable drawbacks are visualization and long-running jobs.</p>
<p>For the long-running jobs I do tend to use Jupyter Notebooks or when at all possible <a href="https://mosh.org/">mosh</a>, which is amazing. However, because the primary modality is not the notebook, my code is versioned and organised into separate libraries which I can call into from notebook or mosh.</p>
<p>For visualization, it’s either connecting to the altair chart server via SSH pipe, dumping the chart to the unison-synced project, and/or a Jupyter Notebook.</p>
<h2 id="the-rest">The rest.</h2>
<p>Of course you use Postgres on an SSD for your data, and of course you know enough SQL to make short work of most of the heavy-weight transformations often required at the start your data crunching pipeline.</p>
<p>For all of my lab notes, reports, books, papers and blog posts, I use <a href="https://vxlabs.com/tag/orgmode/">Emacs Org mode</a>.</p>
<p>LaTeX math with live preview, live code snippets, SVG graphics, bibtex references, export to anything. This is one of the best ways to document your science.</p>
<h1 id="programming-language-addiction-update">Programming language addiction update.</h1>
<p>I spend far too much obsessing over programming languages, old and new.</p>
<p>For the past two weeks, I wasted even more precious time than usual reading up about programming languages.</p>
<p>Because I would really like to spend more of my time on other, perhaps more valuable activities, I’ve been trying to better define what it is I’m actually looking for.</p>
<p>Of course there is no single best programming language, but a whole set of good languages that map in intricate ways to different problem domains.</p>
<p>In spite of this, I have been pining for a language with, in order of importance:</p>
<ol>
<li>A Functional Programming DNA, with which I’m referring to a) <a href="https://en.wikipedia.org/wiki/Expression-oriented_programming_language">expression-orientedness</a>, b) a preference for <a href="https://en.wikipedia.org/wiki/Pure_function">pure functions</a>, and at a higher level, c) the modelling of reality as more or less explicit dataflows.</li>
<li>Interactive programming, with Common Lisp being the textbook example of this.</li>
<li>Great tooling and IDEs, meaning first-class support by something from JetBrains, Microsoft or Emacs.</li>
<li>Great concurrency and parallelism stories.</li>
<li>A great library ecosystem.</li>
<li>Modest memory use.</li>
</ol>
<p>Having just explicitly written this down for the first time (!! – it was consuming so much glucose just being kept amorphously swirling around in my brain) I can now mentally map some of my most recent language dalliances to these points.</p>
<h2 id="go">go</h2>
<p>This language is far too simple for my taste, but probably really great for teams.</p>
<p>I did recently take a more serious look when <a href="https://tutorials.botsfloor.com/develop-your-own-telegram-bot-with-golang-and-tbot-de726883b83c">setting up a telegram bot using tbot</a> and being amazed at how simple it was building web services like these using goroutines and channels.</p>
<p>Go satisfies points 3 to 6 from the list above. Makes sense that I decided to file this experiment away under “check when you need to put a webservice together REALLY QUICKLY”.</p>
<h2 id="rust">rust</h2>
<p>When I saw up that rust, surprisingly, is an expression-oriented language, I flew through the O’Reilly Programming Rust book I had bought previously as part of a bundle.</p>
<p>Evaluating rust by the list above, we award it a fractional 1 because expression-oriented, 3 due to jetbrains plugin amongst others, 4(ish) – great memory safety, but compared to clojure, concurrency and parallelism stories still have much room to grow, a solid 5 thanks to cargo and a very strong 6.</p>
<p>I filed this one away under “re-evaluate whenever you reach for your trusty C++”. (also, <a href="https://github.com/actix/actix-web">actix-web</a> looks amazing for super high performance microservices.)</p>
<h2 id="f">f#</h2>
<p>You didn’t see this one coming, did you?</p>
<p>Very strong 1 to 5 and a solid 6.</p>
<p>WAT?!</p>
<p>I’m currently working my way through <a href="https://pragprog.com/book/swdddf/domain-modeling-made-functional">Domain Modeling Made Functional</a> by Scott Wlaschin, who is also the author of the brilliant <a href="https://fsharpforfunandprofit.com/">f# for fun and profit</a> website.</p>
<p>In addition to f# hitting all 6 of my 2018 PL-requirements above, I’m slowly starting to see the advantages of having a real type system under the hood.</p>
<p>f# is a member of the <a href="https://en.wikipedia.org/wiki/ML_(programming_language)">ML-family</a> of functional languages, which have their origin in Lisp (some very naughty person removed all of the lovely parentheses I’m afraid…).</p>
<p>I hope that at some point I’ll have the opportunity to use f# in anger, at which point I’ll be able to report more concretely as to its suitability.</p>
<h1 id="the-end">The End</h1>
<p>Let me know in the comments what you think about any of this, or anything else.</p>
<p>I hope to meet you again in a few days, here or elsewhere.</p>
]]></content:encoded></item><item><title>Weekly Head Voices #133: Onder in my Whiskeyglas.</title><link>https://cpbotha.net/2018/02/25/weekly-head-voices-133-onder-in-my-whiskeyglas/</link><pubDate>Sun, 25 Feb 2018 21:15:42 +0000</pubDate><author>cpbotha@cpbotha.net (Charl P. Botha)</author><guid>https://cpbotha.net/2018/02/25/weekly-head-voices-133-onder-in-my-whiskeyglas/</guid><description> The legendary Koos Kombuis (aka André Letoit) performing with Schalk Joubert on bass and Vernon Swart on percussion in the Helderberg Nature reserve, eponymous mountain visible through the trees on the right. This was a surprisingly amazing end to the week.
What a week.
It was beautiful to see the whole team step up to the plate and engineer at about 110% throughput (software gets complicated quickly, and there&amp;rsquo;s always one more thing you need to get done before the deliverable is ready), all the while remaining calm and, most importantly, kind.</description><content:encoded><![CDATA[ 







<figure><a href="/wp-content/uploads/2018/02/IMG_3288.jpg">
    <img
        
            
            src="/wp-content/uploads/2018/02/IMG_3288.jpg"
        
            alt="The legendary Koos Kombuis (aka André Letoit) performing with Schalk Joubert on bass and Vernon Swart on percussion in the Helderberg Nature reserve, eponymous mountain visible through the trees on the right. This was a surprisingly amazing end to the week."/> </a><figcaption>
            <p>The legendary Koos Kombuis (aka André Letoit) performing with Schalk Joubert on bass and Vernon Swart on percussion in the Helderberg Nature reserve, eponymous mountain visible through the trees on the right. This was a surprisingly amazing end to the week.</p>
        </figcaption>
</figure>

<p>What a week.</p>
<p>It was beautiful to see the whole team step up to the plate and <em>engineer</em> at about 110% throughput (software gets complicated quickly, and there&rsquo;s always one more thing you need to get done before the deliverable is ready), all the while remaining calm and, most importantly, kind.</p>
<h2 id="pro-tip-special">Pro-tip Special</h2>
<p>I was of course the lucky winner of the manual-writing sub-project. I love writing code, but there&rsquo;s also something quite satisfying about writing documentation for a technical product. Anyways, there are five tiny but hopefully useful lessons I extracted from this exercise which I would like to present here:</p>
<ol>
<li><a href="https://vxlabs.com/2011/08/28/a-windows-console-that-does-not-suck/">I&rsquo;ve lamented the sorry state of the Windows console before</a> (in 2011 to be exact). In a surprise twist, the Windows console still sucks almost 7 years later. At least it&rsquo;s reliable. Anyways, <a href="http://cmder.net/">cmder is a great console replacement</a> which makes some of the stupid go away, somewhat.</li>
<li>The Windows 10 built-in screenshot facility … wait for it… sucks. When you&rsquo;re writing documentation you need a tool that fits into your workflow. Keyboard shortcut – window or region – image ends up in a directory of your choice. <a href="http://getgreenshot.org/">Greenshot is an open source screenshotting tool</a> that does this with aplomb.</li>
<li>You need to show a CHM (Windows Help) file to the user of your wxPython application when they hit F1. How hard could it be? Well, you could spend a number of hours trying to come up with a wx-y cross-platform solution, or you could use that time for something else worth your while and just use the <a href="http://docs.activestate.com/activepython/3.3/pywin32/win32help__HtmlHelp_meth.html">Python win32 package to call into the official Windows help API</a>. (cross-platform does work, it&rsquo;s just really ugly)</li>
<li><a href="http://www.sphinx-doc.org/en/master/">Sphinx</a> is a much better tool to write technical manuals than is Markdown and related tools. I briefly considered Markdown because I always have to look up reStructuredText syntax, but fortunately ran into enough other places <a href="http://ericholscher.com/blog/2016/mar/15/dont-use-markdown-for-technical-docs/">warning against using Markdown for documentation</a>. For the record, I prefer orgmode over all of these puny formats in most other cases, but the documentation story of Sphinx with reStructuredText is admittedly much better.</li>
<li>Start writing the manual as early as possible. It was amazing to see how this helped me to see the software we are designing at a more integrated (user) level. This knowledge was useful in driving more valuable improvements. If you can&rsquo;t explain the flow of some procedure in a manual, that&rsquo;s a good sign the procedure might need some refinement.</li>
</ol>
<h2 id="humble-book-bundle-and-rust">Humble Book Bundle and Rust</h2>
<p>I bought the <a href="https://www.humblebundle.com/books/functional-programming-books">Humble Bundle of (O&rsquo;Reilly) Functional Programming Books</a> for a super affordable $15. I was primarily interested in the <a href="http://shop.oreilly.com/product/0636920040385.do">Programming Rust book by Blandy and Orendorff</a>, but the other titles on Scala, Clojure, Erlang, Elixir, Haskell, Javascript and general functional programming are welcome additions to my library. Speaking of which, I emailed O&rsquo;Reilly to ask if the books in the bundle could be added to my member library, which they promptly did!</p>
<p>I have avoided Rust up to now due to natural hype suppression circuitry, and because I grew up with C++, but its zero-overhead memory safety and trustworthy concurrency story makes it hard to ignore any longer. Even although <a href="https://www.quora.com/Which-language-has-the-brightest-future-in-replacement-of-C-between-D-Go-and-Rust-And-Why/answer/Andrei-Alexandrescu">Andrei Alexandrescu once called Rust the language that skips leg day</a>, it&rsquo;s certainly interesting seeing the constructs the language designers have come up to build a really fast compiled language with the lowest number of foot-guns per line of code.</p>
<p>Anyways, when this blog gets published, you should still have about 22 hours to make use of the <a href="https://www.humblebundle.com/books/functional-programming-books">Humble Bundle deal</a> if you too see something that you like.</p>
<h2 id="life-is-continuous-practice">Life is continuous practice</h2>
<p>I wanted to conclude with something that I&rsquo;ve been thinking about recently. It has to do with explicitly treating one&rsquo;s life as <em>continuous practice</em>. As I&rsquo;ve mentioned before on this blog and people much smarter than me have been pointing out since forever, <a href="/2012/01/28/slow-philosophy-weekly-head-voices-64/">goals are no good</a> and (lasting) <a href="/Weekly-Head-Voices-125/#Happy-Not-Happy">happiness is probably not attainable</a>.</p>
<p>Discarding as many as possible of these sorts of fetters is liberating (you Buddhist), but can seem to leave holes in one&rsquo;s  life narrative. However, treating your life as a super long practice session is an interesting perspective.</p>
<p>There is also no end point, and no real life goal.</p>
<p>The only point of the whole exercise (yes, I see what I did there) is to try to improve continuously. Every day, we try to become a little better at our jobs, or at running, or at being a good human, or a partner, or a parent.</p>
<p>Practice means that you have good days and bad days. It means that you sometimes look back and think that you were a better person then than you are now. Practice means that when you pick one activity, another will temporarily languish until you can make time for it again.</p>
<p>All of this is ok, because tomorrow you have a whole new day to try again.</p>
]]></content:encoded></item></channel></rss>